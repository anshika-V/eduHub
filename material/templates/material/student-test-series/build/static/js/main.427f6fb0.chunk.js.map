{"version":3,"sources":["components/Top/css/UserBtn.module.css","components/Top/css/Top.module.css","components/Top/css/SocketStatus.module.css","components/Body/css/Tests.module.css","components/Top/css/Notification.module.css","components/Body/css/Main.module.css","components/Body/css/AddedTests.module.css","components/Body/css/About.module.css","components/Top/Nav.js","components/Top/UserBtn.js","components/Top/Notification.js","components/Top/SockerStatus.js","components/Top/Top.js","redux/actions/Profile.js","components/Body/AddedTests.js","components/Body/About.js","components/Body/Tests.js","SocketManager.js","components/Body/Main.js","redux/actions/TestSeries.js","App.js","redux/reducers/Profile.js","redux/reducers/TestSeries.js","redux/Store.js","index.js"],"names":["module","exports","Nav","props","className","id","styles","navCont","href","navLink","join","style","opacity","connect","state","profile","Profile","useState","userPannelVis","changeVis","userBtnCont","userBtn","onClick","ev","onBlur","setTimeout","src","undefined","name","window","media_url","fields","profile_pic","userBtnImg","alt","userPannel","display","Fragment","userData","username","email","userPannelLink","base","Notification","notifBtn","socketStatus","SocketState","status","disp","console","log","dot1","dot2","dot3","dispatch","updateProfile","data","type","payload","useEffect","fetch","credentials","cred","then","response","json","profileData","topBar","edu","location","assign","AddedTests","this","tests","map","index","indexOfTest","indexOf","pk","key","title","delTest","deleteTest","filter","element","length","Component","Test","TestSeries","testSmain","testSeries","maxWidth","whiteSpace","description","Tests","testBtns","testBtnsmain","extractKey","url","size","lastindexofSlash","lastIndexOf","slice","substring","Main","spinner","fetchData","Response","updateTestSeriesData","catch","error","alert","componentDidMount","main","About","App","action","Store","createStore","combineReducers","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.427f6fb0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"UserBtn_navLink__3C6qU\",\"userBtn\":\"UserBtn_userBtn__2502Q\",\"userBtnImg\":\"UserBtn_userBtnImg__1XDNf\",\"userPannel\":\"UserBtn_userPannel__SYTvw\",\"userPannelLink\":\"UserBtn_userPannelLink__squgZ\",\"userData\":\"UserBtn_userData__ZFyrl\",\"userBtnCont\":\"UserBtn_userBtnCont__1BfAU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topBar\":\"Top_topBar__1M36g\",\"navLink\":\"Top_navLink__31pSM\",\"edu\":\"Top_edu__3lhuD\",\"navCont\":\"Top_navCont__2D-Nz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dot1\":\"SocketStatus_dot1__2gVtp\",\"dot1Anim\":\"SocketStatus_dot1Anim__2GG5M\",\"dot2\":\"SocketStatus_dot2__2ZiMM\",\"dot2Anim\":\"SocketStatus_dot2Anim__2b30V\",\"dot3\":\"SocketStatus_dot3__2aMyN\",\"dot3Anim\":\"SocketStatus_dot3Anim__3SIAx\",\"status\":\"SocketStatus_status__LHVNz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testBtnsmain\":\"Tests_testBtnsmain__1yHdl\",\"testBtns\":\"Tests_testBtns__2tpC_\",\"active\":\"Tests_active__3nRER\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notifBtn\":\"Notification_notifBtn__U2Qxp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__1oWsp\",\"save\":\"Main_save__1nhdc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delTest\":\"AddedTests_delTest__1IBxQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testSmain\":\"About_testSmain__33ViU\"};","import React from 'react';\nimport styles from './css/Top.module.css';\n\nfunction Nav(props) {\n\treturn (\n\t\t<div className=\"ml-4 pl-4\" id={styles.navCont}>\n\t\t\t<a href=\"/\" className={[ styles.navLink, 'ml-4 mr-4' ].join(' ')}>\n\t\t\t\tHome\n\t\t\t</a>\n\t\t\t<a href=\"#\" className={[ styles.navLink, 'ml-4 mr-4' ].join(' ')} style={{ opacity: '30%' }}>\n\t\t\t\tBlog\n\t\t\t</a>\n\t\t\t<a href=\"#\" className={[ styles.navLink, 'ml-4 mr-4' ].join(' ')} style={{ opacity: '30%' }}>\n\t\t\t\tContact\n\t\t\t</a>\n\t\t</div>\n\t);\n}\n\nexport default Nav;\n","import React, { useState } from 'react';\nimport styles from './css/UserBtn.module.css';\n\nimport { connect } from 'react-redux';\n\nfunction UserBtn(props) {\n\tconst [ userPannelVis, changeVis ] = useState('none');\n\treturn (\n\t\t<div className=\"ml-2\" id={styles.userBtnCont}>\n\t\t\t<button\n\t\t\t\tclassName=\"p-0\"\n\t\t\t\tid={styles.userBtn}\n\t\t\t\tonClick={(ev) => changeVis(userPannelVis === 'block' ? 'none' : 'block')}\n\t\t\t\tonBlur={(ev) => setTimeout(changeVis, 10, 'none')}\n\t\t\t>\n\t\t\t\t<img\n\t\t\t\t\tsrc={props.profile.name !== undefined ? window.media_url + props.profile.fields.profile_pic : ''}\n\t\t\t\t\tid={styles.userBtnImg}\n\t\t\t\t\talt=\"\"\n\t\t\t\t/>\n\t\t\t</button>\n\t\t\t<div\n\t\t\t\tonClick={(ev) => setTimeout(changeVis, 20, 'block')}\n\t\t\t\tid={styles.userPannel}\n\t\t\t\tclassName=\"p-2 pr-3 bg-white\"\n\t\t\t\tstyle={{ display: userPannelVis }}\n\t\t\t>\n\t\t\t\t{props.profile.name !== undefined ? (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<span className={styles.userData}>{props.profile.username}</span>\n\t\t\t\t\t\t<span className={[ styles.userData, 'text-secondary' ].join(' ')}>{props.profile.email}</span>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\t\t\t\t<hr className=\"m-0 mt-1\" />\n\t\t\t\t<a\n\t\t\t\t\thref=\"#\"\n\t\t\t\t\tclassName={[ styles.navLink, styles.userPannelLink, 'pb-0 mt-2 mb-1 mr-2 ml-1' ].join(' ')}\n\t\t\t\t\tstyle={{ opacity: '30%' }}\n\t\t\t\t>\n\t\t\t\t\tProfile\n\t\t\t\t</a>\n\t\t\t\t<a\n\t\t\t\t\thref={window.base + '/user/logout/'}\n\t\t\t\t\tclassName={[ styles.navLink, styles.userPannelLink, 'pb-0 mb-0 mr-2 ml-1' ].join(' ')}\n\t\t\t\t>\n\t\t\t\t\tLogout\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tprofile: state.Profile\n\t};\n};\n\nexport default connect(mapStateToProps)(UserBtn);\n","import React from 'react';\nimport styles from './css/Notification.module.css';\n\nfunction Notification(props) {\n\treturn (\n\t\t<div className=\"ml-auto mr-4\" style={{ opacity: '30%' }}>\n\t\t\t<button className=\"material-icons  btn\" id={styles.notifBtn}>\n\t\t\t\tnotifications\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport default Notification;\n","import React from 'react';\nimport styles from './css/SocketStatus.module.css';\n\nimport { connect } from 'react-redux';\n\nfunction SocketStatus(props) {\n\tlet disp = 'default';\n\tconsole.log('status', props.socketStatus);\n\tswitch (props.socketStatus) {\n\t\tcase 'connecting':\n\t\tcase 'saving':\n\t\tcase 'reconnecting':\n\t\t\tdisp = (\n\t\t\t\t<h6 className=\"text-muted mb-0 pb-0\" id={styles.status}>\n\t\t\t\t\t{props.socketStatus}\n\t\t\t\t\t<span id={styles.dot1}>.</span>\n\t\t\t\t\t<span id={styles.dot2}>.</span>\n\t\t\t\t\t<span id={styles.dot3}>.</span>\n\t\t\t\t</h6>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'saved':\n\t\t\tdisp = (\n\t\t\t\t<h6 className=\"text-muted\" id={styles.status}>\n\t\t\t\t\tAll previous changes saved\n\t\t\t\t</h6>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'connected':\n\t\t\tdisp = (\n\t\t\t\t<h6 className=\"text-muted\" id={styles.status}>\n\t\t\t\t\tConnected\n\t\t\t\t</h6>\n\t\t\t);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn <div className=\"ml-4 pb-0 mt-4\">{disp}</div>;\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tsocketStatus: state.SocketState.status\n\t};\n};\n\nexport default connect(mapStateToProps)(SocketStatus);\n","import React, { useEffect } from 'react';\nimport styles from './css/Top.module.css';\nimport Nav from './Nav.js';\nimport UserBtn from './UserBtn.js';\nimport Notiification from './Notification.js';\nimport SocketStatus from './SockerStatus.js';\n\nimport { connect } from 'react-redux';\nimport { updateProfile } from './../../redux/actions/Profile.js';\n\nfunction Top(props) {\n\tuseEffect(\n\t\t() => {\n\t\t\tfetch(window.base + '/user/api/profile/', { credentials: window.cred }) //fetching profile data\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then((profileData) => props.updateProfile(profileData));\n\t\t},\n\t\t[ props ]\n\t);\n\treturn (\n\t\t<div id={styles.topBar} className=\"d-flex flex-row align-items-center col-12 pl-2  text-light\">\n\t\t\t<h1 className=\"display-3 ml-2 text-dark\" id={styles.edu} onClick={() => window.location.assign('/')}>\n\t\t\t\t<span>eduHub</span>\n\t\t\t</h1>\n\t\t\t<Nav />\n\t\t\t{/* <SocketStatus /> */}\n\t\t\t<Notiification />\n\t\t\t<UserBtn />\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = null;\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tupdateProfile: (data) => dispatch(updateProfile(data))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Top);\n","export function updateProfile(data) {\n\treturn {\n\t\ttype: 'updateProfile',\n\t\tpayload: data\n\t};\n}\n","import React, { Component } from 'react';\nimport styles from './css/AddedTests.module.css';\n\nimport { connect } from 'react-redux';\n\nclass AddedTests extends Component {\n\trender() {\n\t\tlet disp = [];\n\t\tdisp = this.props.tests.map((data, index) => {\n\t\t\tlet indexOfTest = this.props.AddedTests.indexOf(data.pk);\n\t\t\tif (indexOfTest !== -1)\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"form-control\" key={index}>\n\t\t\t\t\t\t{data.fields.title}\n\t\t\t\t\t\t<i\n\t\t\t\t\t\t\tclassName={[ 'material-icons float-right text-danger', styles.delTest ].join(' ')}\n\t\t\t\t\t\t\tonClick={(ev) => this.props.deleteTest(indexOfTest)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tremove\n\t\t\t\t\t\t</i>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t});\n\t\tdisp = disp.filter((element) => element);\n\t\tif (disp.length === 0)\n\t\t\tdisp = (\n\t\t\t\t<h6>\n\t\t\t\t\tNo Tests Added.<br /> Add Tests from Add Tests Section\n\t\t\t\t</h6>\n\t\t\t);\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h4 className=\"mt-4 ml-2\">Tests:</h4>\n\t\t\t\t<hr />\n\t\t\t\t{disp}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\ttests: state.Test.tests,\n\t\tAddedTests: state.TestSeries.fields.tests\n\t};\n};\n\nexport default connect(mapStateToProps)(AddedTests);\n","import React, { Component } from 'react';\nimport AddedTests from './AddedTests.js';\nimport styles from './css/About.module.css';\n\nimport { connect } from 'react-redux';\n\nclass Test extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"p-4 flex-fill align-self-stretch mb-2\" id={styles.testSmain}>\n\t\t\t\t<h2>Test Series</h2>\n\t\t\t\t<hr />\n\t\t\t\t{/* <label>Title:</label> */}\n\t\t\t\t<h3 className=\"text-center\">{this.props.testSeries.title} </h3>\n\t\t\t\t<label className=\"mt-3\">Description:</label>\n\t\t\t\t<p className=\"text-center\" style={{ maxWidth: '100%', whiteSpace: 'pre-wrap' }}>\n\t\t\t\t\tvalue={this.props.testSeries.description}\n\t\t\t\t</p>\n\t\t\t\t{/* <AddedTests /> */}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\ttestSeries: state.TestSeries\n\t};\n};\n\nexport default connect(mapStateToProps)(Test);\n","import React, { Component } from 'react';\nimport styles from './css/Tests.module.css';\n\nimport { connect } from 'react-redux';\n\nclass Tests extends Component {\n\trender() {\n\t\tlet disp = '';\n\t\tdisp = this.props.tests.map((data, index) => {\n\t\t\treturn (\n\t\t\t\t<a\n\t\t\t\t\thref={window.base + '/material/student-test/' + data.id}\n\t\t\t\t\tkey={index}\n\t\t\t\t\tclassName={[ 'form-control text-left m-1', styles.testBtns ].join(' ')}\n\t\t\t\t>\n\t\t\t\t\t{data.title}\n\t\t\t\t</a>\n\t\t\t);\n\t\t});\n\t\treturn (\n\t\t\t<div className=\"flex-fill mb-2 p-2 align-self-stretch\" id={styles.testBtnsmain}>\n\t\t\t\t<h3 className=\"p-1\">Tests</h3>\n\t\t\t\t<hr />\n\t\t\t\t{disp}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\ttests: state.TestSeries.tests\n\t};\n};\n\nexport default connect(mapStateToProps)(Tests);\n","// import React, { Component } from 'react';\n// // import ReactDOM from 'react-dom';\n// // import Message from './components/Message.js';\n\n// import store from './redux/Store.js';\n// import { connect } from 'react-redux';\n// import { imageUploaded, AddingToBuffer } from './redux/actions/Test.js';\n// import { setSocket, connected, sending, saved, disconnected, dataBufferShift } from './redux/actions/SocketState.js';\n\n// class SocketManager extends Component {\n// \tconstructor(props) {\n// \t\tsuper(props);\n// \t\tthis.ws = null;\n// \t}\n\n// \tInitilizeBackend = () => {\n// \t\tlet key = extractKey();\n// \t\tkey = parseInt(key);\n// \t\tlet raw_data = { type: 'initilization', payload: key };\n// \t\tthis.ws.send(JSON.stringify(raw_data));\n// \t};\n\n// \tNewWebSocket = () => {\n// \t\tthis.ws = new WebSocket('ws://' + window.hostName + '/ws/material/testMaker/');\n\n// \t\t//When the socket wil open tis method will will send the socket to redux ScketState and initilize the backend will the test\n// \t\tthis.ws.onopen = () => {\n// \t\t\tthis.props.setSocket(this.ws);\n// \t\t\tthis.InitilizeBackend();\n// \t\t};\n\n// \t\tthis.ws.onmessage = (ev) => {\n// \t\t\tlet msg = JSON.parse(ev.data);\n// \t\t\tswitch (msg.type) {\n// \t\t\t\tcase 'connected':\n// \t\t\t\t\tthis.props.socketConnected();\n// \t\t\t\t\tbreak;\n// \t\t\t\tcase 'saved':\n// \t\t\t\t\tthis.props.saved();\n// \t\t\t\t\tbreak;\n// \t\t\t\tcase 'imageUploaded':\n// \t\t\t\t\tthis.props.dataBufferShift();\n// \t\t\t\t\tthis.props.imageUploaded(msg.index, msg.image);\n// \t\t\t\t\tbreak;\n// \t\t\t\tcase 'dataUploaded':\n// \t\t\t\t\tthis.props.dataBufferShift();\n// \t\t\t\t\tbreak;\n// \t\t\t\tcase 'error':\n// \t\t\t\t\tswitch (msg.code) {\n// \t\t\t\t\t\tcase 'NI':\n// \t\t\t\t\t\t\tthis.props.disconnected();\n// \t\t\t\t\t\t\tthis.InitilizeBackend();\n// \t\t\t\t\t\t\tbreak;\n// \t\t\t\t\t\tdefault:\n// \t\t\t\t\t\t\tthis.props.disconnected();\n// \t\t\t\t\t\t\tthis.ws.close();\n// \t\t\t\t\t}\n// \t\t\t\t\tbreak;\n// \t\t\t\tdefault:\n// \t\t\t\t\tbreak;\n// \t\t\t}\n// \t\t};\n\n// \t\t// if the socket closes thisfunction will to try to reconnect after 5 seconds\n// \t\tthis.ws.onclose = (ev) => {\n// \t\t\tthis.props.disconnected();\n// \t\t\tsetTimeout(this.NewWebSocket, 5000);\n// \t\t};\n\n// \t\t//if there is any error in connection this function will try to reconnect after 15 seconds\n// \t\tthis.ws.onerror = (ev) => {\n// \t\t\tthis.props.disconnected();\n// \t\t\tsetTimeout(this.NewWebSocket, 15000);\n// \t\t};\n// \t};\n\n// \tcomponentDidMount = () => {\n// \t\tthis.NewWebSocket();\n// \t};\n\n// \tBufferManager = () => {\n// \t\tlet questions = store.getState().Test.questions;\n// \t\tif (this.props.isready === 0) return;\n// \t\tif (this.props.buffer.length !== 0) {\n// \t\t\tlet qstn = questions[this.props.buffer[0]];\n// \t\t\tlet data = {\n// \t\t\t\ttype: 'questionUpdate',\n// \t\t\t\tpayload: qstn\n// \t\t\t};\n// \t\t\tdata = JSON.stringify(data);\n// \t\t\tthis.props.sendingData();\n// \t\t\tthis.ws.send(data);\n// \t\t\treturn;\n// \t\t} else if (this.props.dataBuffer.length !== 0) {\n// \t\t\tlet data = this.props.dataBuffer[0];\n// \t\t\tthis.props.sendingData();\n// \t\t\tthis.ws.send(data);\n// \t\t}\n// \t};\n\n// \trender() {\n// \t\tthis.BufferManager();\n// \t\treturn (\n// \t\t\t<React.Fragment>\n// \t\t\t\t<button className=\"float-right mr-4 mb-4 mt-1 btn btn-success\" onClick={AddingToBuffer}>\n// \t\t\t\t\tsave\n// \t\t\t\t</button>\n// \t\t\t</React.Fragment>\n// \t\t);\n// \t}\n// }\n\n// const mapStateToProps = (state) => {\n// \treturn {\n// \t\tdataBuffer: state.SocketState.dataBuffer,\n// \t\tbuffer: state.SocketState.buffer,\n// \t\tisready: state.SocketState.isready\n// \t};\n// };\n\n// const mapDispatchToProps = (dispatch) => {\n// \treturn {\n// \t\tsetSocket: (ws) => dispatch(setSocket(ws)),\n// \t\tsocketConnected: () => dispatch(connected()),\n// \t\tsendingData: () => dispatch(sending()),\n// \t\tsaved: () => dispatch(saved()),\n// \t\timageUploaded: (index, image) => dispatch(imageUploaded(index, image)),\n// \t\tdataBufferShift: () => dispatch(dataBufferShift()),\n// \t\tdisconnected: () => dispatch(disconnected())\n// \t};\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(SocketManager);\n\nvar extractKey = () => {\n\t//extracts the pk form the url\n\tlet url = window.location.href;\n\tlet size = url.length;\n\tlet lastindexofSlash = url.lastIndexOf('/');\n\tif (lastindexofSlash === size - 1) {\n\t\turl = url.slice(0, -1);\n\t\tlastindexofSlash = url.lastIndexOf('/');\n\t}\n\treturn url.substring(lastindexofSlash + 1);\n};\n\nexport { extractKey };\n","import React, { Component } from 'react';\nimport styles from './css/Main.module.css';\nimport About from './About.js';\nimport Tests from './Tests.js';\nimport { extractKey } from './../../SocketManager.js';\n\nimport { connect } from 'react-redux';\nimport { updateTestSeriesData } from './../../redux/actions/TestSeries.js';\n\n//Entry point for the main body\nclass Main extends Component {\n\t//fetching and saving the testSeries data\n\tstate = {\n\t\tspinner: ''\n\t};\n\tfetchData = (key) => {\n\t\t//fetches all the test data at once\n\t\tfetch(window.base + '/material/api/student/test-series/' + key + '/', { credentials: window.cred })\n\t\t\t.then((Response) => Response.json())\n\t\t\t.then((data) => {\n\t\t\t\tthis.props.updateTestSeriesData(data);\n\t\t\t\tconsole.log('fetched data: ', data);\n\t\t\t})\n\t\t\t.catch((error) => alert('Error fetching data: possible reasons unauthorised access aur connection issue '));\n\t};\n\n\t//Fetching data after component has been mounted\n\tcomponentDidMount = () => {\n\t\t//extracts key from url and fetchs all the test data at once\n\t\tlet key = extractKey();\n\t\tthis.fetchData(key);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div id={styles.main} className=\"p-1 d-flex pt-2 pb-0 mb-4\">\n\t\t\t\t<About />\n\t\t\t\t<Tests />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tupdateTestSeriesData: (data) => dispatch(updateTestSeriesData(data)) //to store the fetched data of test series\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","export function updateTestSeriesData(data) {\n\treturn {\n\t\ttype: 'updateTestSeriesData',\n\t\tpayload: data\n\t};\n}\n","import React from 'react';\nimport Top from './components/Top/Top.js';\nimport Main from './components/Body/Main.js';\n\nfunction App() {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Top /> <Main />\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n","const Profile = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase 'updateProfile':\n\t\t\tstate = { ...action.payload };\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn state;\n};\n\nexport default Profile;\n","const TestSeries = (state = { tests: [] }, action) => {\n\tstate = { ...state };\n\tswitch (action.type) {\n\t\tcase 'updateTestSeriesData':\n\t\t\tstate = { ...action.payload };\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn state;\n};\n\nexport default TestSeries;\n","import { createStore, combineReducers } from 'redux';\nimport Profile from './reducers/Profile.js';\nimport TestSeries from './reducers/TestSeries.js';\n// import SocketState from './reducers/SocketState.js';\n\nconst Store = createStore(combineReducers({ Profile, TestSeries }), {});\n\nexport default Store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Store from './redux/Store.js';\nimport { Provider } from 'react-redux';\nimport SocketManager from './SocketManager.js';\n\nwindow.base = '';\n// window.hostName = 'localhost:8000';\n// window.media_url = window.base + '/media/';\nwindow.media_url = 'https://eduhub.blob.core.windows.net/eduhub/';\nwindow.cred = 'same-origin';\n\nReactDOM.render(\n\t<Provider store={Store}>\n\t\t<App />\n\t\t{/* <SocketManager /> */}\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n// var ws = new WebSocket('ws://' + window.host + '/ws/material/testMaker/');\n// export { ws };\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}