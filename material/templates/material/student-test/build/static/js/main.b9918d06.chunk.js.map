{"version":3,"sources":["components/Body/css/Question.module.css","components/Top/css/UserBtn.module.css","components/Top/css/Top.module.css","components/Top/css/SocketStatus.module.css","components/Body/css/Initial.module.css","components/Body/css/Main.module.css","components/Body/css/Sidebar.module.css","components/Body/css/QuestionsBtns.module.css","components/Top/css/Notification.module.css","components/Top/Nav.js","components/Top/UserBtn.js","components/Top/Notification.js","components/Top/SockerStatus.js","components/Top/Top.js","redux/actions/Profile.js","redux/reducers/Profile.js","redux/reducers/Test.js","redux/reducers/SocketState.js","redux/Store.js","redux/actions/SocketState.js","redux/actions/Test.js","components/Body/Choices.js","components/Body/Image.js","components/Body/Initial.js","components/Body/Question.js","components/Body/QuestionsBtns.js","components/Body/Timer.js","components/Body/Sidebar.js","components/Body/result.js","components/Message.js","SocketManager.js","components/Body/Main.js","App.js","index.js"],"names":["module","exports","Nav","props","className","id","styles","navCont","href","navLink","join","style","opacity","connect","state","profile","Profile","useState","userPannelVis","changeVis","userBtnCont","userBtn","onClick","ev","onBlur","setTimeout","src","undefined","name","window","media_url","fields","profile_pic","userBtnImg","alt","userPannel","display","Fragment","userData","username","email","userPannelLink","base","Notification","notifBtn","socketStatus","SocketState","status","disp","console","log","dot1","dot2","dot3","dispatch","updateProfile","data","type","payload","useEffect","fetch","credentials","cred","then","response","json","profileData","topBar","edu","location","assign","action","Test","active","questions","answer","includes","changed","map","question","index","marks","socket","questionBuffer","dataBuffer","isready","screen","splice","length","Store","createStore","combineReducers","addToDataBuffer","updateActive","test","store","getState","AddToBuffer","updateAnswer","ans","Choices","resetAnswer","answerHandler","choicesCont","checked","this","choicesLabel","choices","fontSize","submitted","Component","jsonChoices","JSON","parse","image","Initial","btnSpinner","enterBtn","entry","title","desc","description","ref","el","setState","enter","stringify","click","details","testData","instructor","duration","getDerivedStateFromProps","m","forEach","qs","Question","check","res","questionMain","qno","qinfo","text","rightpannel","ansInp","value","onChange","target","readOnly","rows","cols","mark","QuestionsBtns","cls","btns","key","qBtnsCont","Timer","started","startTime","Date","getTime","left","passed","sec","Math","floor","minutes","submit","timer","Sidebar","componentDidMount","sendResult","marks_list","split","mk","a","max","toFixed","sidebarMain","sideHead","addBtn","pk","total","Message","SocketManager","NewWebSocket","extractKey","ws","WebSocket","hostName","onopen","setSocket","onmessage","error","msg","updateTestData","TestData","socketConnected","updateTestDataForReconnected","dataBufferShift","savedQuestion","onclose","disconnected","onerror","socketError","navigator","onLine","ononline","BufferManager","qstn","sendingData","send","Object","url","size","lastindexofSlash","lastIndexOf","slice","substring","Main","val","setScreenFunction","main","fullScreen","func","App","host","ReactDOM","render","document","getElementById"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,aAAe,+BAA+B,IAAM,sBAAsB,MAAQ,wBAAwB,MAAQ,wBAAwB,YAAc,8BAA8B,SAAW,2BAA2B,YAAc,8BAA8B,QAAU,0BAA0B,aAAe,+BAA+B,OAAS,yBAAyB,KAAO,yB,oBCArZD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,WAAa,4BAA4B,WAAa,4BAA4B,eAAiB,gCAAgC,SAAW,0BAA0B,YAAc,+B,iBCA9QD,EAAOC,QAAU,CAAC,OAAS,oBAAoB,QAAU,qBAAqB,IAAM,iBAAiB,QAAU,uB,gBCA/GD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,SAAW,+BAA+B,KAAO,2BAA2B,SAAW,+BAA+B,KAAO,2BAA2B,SAAW,+BAA+B,OAAS,+B,kBCA/PD,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,KAAO,sBAAsB,QAAU,2B,kBCAxFD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,WAAa,yBAAyB,MAAQ,sB,iBCA1FD,EAAOC,QAAU,CAAC,YAAc,6BAA6B,SAAW,0BAA0B,OAAS,0B,gBCA3GD,EAAOC,QAAU,CAAC,UAAY,iCAAiC,KAAO,8B,qBCAtED,EAAOC,QAAU,CAAC,SAAW,iC,+JCkBdC,MAhBf,SAAaC,GACZ,OACC,yBAAKC,UAAU,YAAYC,GAAIC,IAAOC,SACrC,uBAAGC,KAAK,IAAIJ,UAAW,CAAEE,IAAOG,QAAS,aAAcC,KAAK,MAA5D,QAGA,uBAAGF,KAAK,IAAIJ,UAAW,CAAEE,IAAOG,QAAS,aAAcC,KAAK,KAAMC,MAAO,CAAEC,QAAS,QAApF,QAGA,uBAAGJ,KAAK,IAAIJ,UAAW,CAAEE,IAAOG,QAAS,aAAcC,KAAK,KAAMC,MAAO,CAAEC,QAAS,QAApF,a,+BC0CH,IAMeC,eANS,SAACC,GACxB,MAAO,CACNC,QAASD,EAAME,WAIFH,EAvDf,SAAiBV,GAAQ,IAAD,EACcc,mBAAS,QADvB,mBACfC,EADe,KACAC,EADA,KAEvB,OACC,yBAAKf,UAAU,OAAOC,GAAIC,IAAOc,aAChC,4BACChB,UAAU,MACVC,GAAIC,IAAOe,QACXC,QAAS,SAACC,GAAD,OAAQJ,EAA4B,UAAlBD,EAA4B,OAAS,UAChEM,OAAQ,SAACD,GAAD,OAAQE,WAAWN,EAAW,GAAI,UAE1C,yBACCO,SAA4BC,IAAvBxB,EAAMY,QAAQa,KAAqBC,OAAOC,UAAY3B,EAAMY,QAAQgB,OAAOC,YAAc,GAC9F3B,GAAIC,IAAO2B,WACXC,IAAI,MAGN,yBACCZ,QAAS,SAACC,GAAD,OAAQE,WAAWN,EAAW,GAAI,UAC3Cd,GAAIC,IAAO6B,WACX/B,UAAU,oBACVO,MAAO,CAAEyB,QAASlB,SAEMS,IAAvBxB,EAAMY,QAAQa,KACd,kBAAC,IAAMS,SAAP,KACC,0BAAMjC,UAAWE,IAAOgC,UAAWnC,EAAMY,QAAQwB,UACjD,0BAAMnC,UAAW,CAAEE,IAAOgC,SAAU,kBAAmB5B,KAAK,MAAOP,EAAMY,QAAQyB,QAGlF,GAED,wBAAIpC,UAAU,aACd,uBACCI,KAAK,IACLJ,UAAW,CAAEE,IAAOG,QAASH,IAAOmC,eAAgB,4BAA6B/B,KAAK,KACtFC,MAAO,CAAEC,QAAS,QAHnB,WAOA,uBACCJ,KAAMqB,OAAOa,KAAO,gBACpBtC,UAAW,CAAEE,IAAOG,QAASH,IAAOmC,eAAgB,uBAAwB/B,KAAK,MAFlF,e,iBC9BWiC,MAVf,SAAsBxC,GACrB,OACC,yBAAKC,UAAU,eAAeO,MAAO,CAAEC,QAAS,QAC/C,4BAAQR,UAAU,sBAAsBC,GAAIC,IAAOsC,UAAnD,mB,iBCyCH,IAMe/B,eANS,SAACC,GACxB,MAAO,CACN+B,aAAc/B,EAAMgC,YAAYC,UAInBlC,EAhDf,SAAsBV,GACrB,IAAI6C,EAAO,UAEX,OADAC,QAAQC,IAAI,SAAU/C,EAAM0C,cACpB1C,EAAM0C,cACb,IAAK,aACL,IAAK,SACL,IAAK,eACL,IAAK,WACJG,EACC,wBAAI5C,UAAU,uBAAuBC,GAAIC,IAAOyC,QAC9C5C,EAAM0C,aACP,0BAAMxC,GAAIC,IAAO6C,MAAjB,KACA,0BAAM9C,GAAIC,IAAO8C,MAAjB,KACA,0BAAM/C,GAAIC,IAAO+C,MAAjB,MAGF,MACD,IAAK,QACJL,EACC,wBAAI5C,UAAU,aAAaC,GAAIC,IAAOyC,QAAtC,8BAID,MACD,IAAK,YACJC,EACC,wBAAI5C,UAAU,aAAaC,GAAIC,IAAOyC,QAAtC,aAID,MACD,QACCC,EACC,wBAAI5C,UAAU,aAAaC,GAAIC,IAAOyC,QACpC5C,EAAM0C,cAKX,OAAO,yBAAKzC,UAAU,kBAAkB4C,MCTzC,IAQenC,cARS,MAEG,SAACyC,GAC3B,MAAO,CACNC,cAAe,SAACC,GAAD,OAAUF,ECvCpB,SAAuBE,GAC7B,MAAO,CACNC,KAAM,gBACNC,QAASF,GDoCyBD,CAAcC,QAInC3C,EAhCf,SAAaV,GAUZ,OARAwD,qBACC,WACCC,MAAM/B,OAAOa,KAAO,qBAAsB,CAAEmB,YAAahC,OAAOiC,OAC9DC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAiB/D,EAAMoD,cAAcW,QAE7C,CAAE/D,IAGF,yBAAKE,GAAIC,IAAO6D,OAAQ/D,UAAU,8DACjC,wBAAIA,UAAU,2BAA2BC,GAAIC,IAAO8D,IAAK9C,QAAS,kBAAMO,OAAOwC,SAASC,OAAO,OAC9F,yCAGD,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,U,qGEnBYtD,EAXC,WAAyB,IAAxBF,EAAuB,uDAAf,GAAIyD,EAAW,uCACvC,OAAQA,EAAOd,MACd,IAAK,gBACJ3C,EAAK,eAAQyD,EAAOb,SAKtB,OAAO5C,GCyCO0D,EAjDF,WAAgE,IAA/D1D,EAA8D,uDAAtD,CAAE2D,QAAS,EAAGC,UAAW,GAAI3C,OAAQ,IAAMwC,EAAW,uCAE3E,OADAzD,EAAK,eAAQA,GACLyD,EAAOd,MACd,IAAK,iBACJ3C,EAAK,eAAQyD,EAAOb,SACpB,MAED,IAAK,eACJ5C,EAAM2D,OAASF,EAAOb,SACD,GAAjB5C,EAAM2D,SAAc3D,EAAM4D,UAAU5D,EAAM2D,QAAQ3D,MAAM,GAAK,GACjE,MAED,IAAK,qBACJA,EAAM4D,UAAU5D,EAAM2D,QAAQE,OAASJ,EAAOb,QAC9C5C,EAAM4D,UAAU5D,EAAM2D,QAAtB,eAAqC3D,EAAM4D,UAAU5D,EAAM2D,SACvD,CAAE,IAAK,KAAMG,SAAS9D,EAAM4D,UAAU5D,EAAM2D,QAAQ1C,OAAO0B,MAClB,IAAxC3C,EAAM4D,UAAU5D,EAAM2D,QAAQE,OACjC7D,EAAM4D,UAAU5D,EAAM2D,QAAQ3D,MAAM,GAAK,GAEzCmC,QAAQC,IAAI,qBACZpC,EAAM4D,UAAU5D,EAAM2D,QAAQ3D,MAAM,GAAK,GAEhC,CAAE,IAAK,IAAK,KAAM,KAAM,KAAM,OAAQ8D,SAAS9D,EAAM4D,UAAU5D,EAAM2D,QAAQ1C,OAAO0B,QACzC,QAAjD3C,EAAM4D,UAAU5D,EAAM2D,QAAQE,OAAOjE,KAAK,IAC7CI,EAAM4D,UAAU5D,EAAM2D,QAAQ3D,MAAM,GAAK,EACnCA,EAAM4D,UAAU5D,EAAM2D,QAAQ3D,MAAM,GAAK,GAEjDA,EAAM4D,UAAU5D,EAAM2D,QAAQI,QAAU,EACxC,MACD,IAAK,eACJ/D,EAAM4D,UAAU5D,EAAM2D,QAAQ3D,MAAM,IAAMA,EAAM4D,UAAU5D,EAAM2D,QAAQ3D,MAAM,GAAK,GAAK,EACxFA,EAAM4D,UAAU5D,EAAM2D,QAAQI,QAAU,EACxC,MACD,IAAK,YACJ5B,QAAQC,IAAI,yBAA0BqB,EAAOb,SAC7C5C,EAAM4D,UAAY5D,EAAM4D,UAAUI,KAAI,SAACC,EAAUC,GAChD,OAAO,2BACHD,GADJ,IAECE,MAAOV,EAAOb,QAAQsB,QAGxB/B,QAAQC,IAAI,qBAAsBpC,GAKpC,OAAOA,GCKOgC,EAnDK,WAGd,IAFLhC,EAEI,uDAFI,CAAEoE,OAAQ,KAAMnC,OAAQ,aAAcoC,eAAgB,GAAIC,WAAY,GAAIC,QAAS,EAAGC,OAAQ,MACtGf,EACI,uCAEJ,OADAzD,EAAK,eAAQA,GACLyD,EAAOd,MACd,IAAK,YACJ3C,EAAMoE,OAASX,EAAOb,QACtB5C,EAAMiC,OAAS,WACf,MACD,IAAK,YACJjC,EAAMiC,OAAS,YACfjC,EAAMuE,QAAU,EAChB,MACD,IAAK,eACJvE,EAAMiC,OAAS,eACfjC,EAAMuE,QAAU,EAChB,MACD,IAAK,sBACJvE,EAAMqE,eAAN,sBAA4BrE,EAAMqE,gBAAlC,CAAkDZ,EAAOb,UACzD,MACD,IAAK,cACJ5C,EAAMuE,QAAU,EAChBvE,EAAMiC,OAAS,SACf,MACD,IAAK,kBACJjC,EAAMsE,WAAN,sBAAwBtE,EAAMsE,YAA9B,CAA0Cb,EAAOb,UACjD,MACD,IAAK,gBACJ5C,EAAMqE,eAAN,YAA4BrE,EAAMqE,eAAeI,OAAO,IACpB,IAAhCzE,EAAMqE,eAAeK,QAA4C,IAA5B1E,EAAMsE,WAAWI,SAAc1E,EAAMiC,OAAS,SACvFjC,EAAMuE,QAAU,EAChB,MACD,IAAK,kBACJvE,EAAMsE,WAAN,YAAwBtE,EAAMsE,WAAWG,OAAO,IAChDzE,EAAMuE,QAAU,EACoB,IAAhCvE,EAAMqE,eAAeK,QAA4C,IAA5B1E,EAAMsE,WAAWI,SAAc1E,EAAMiC,OAAS,SACvF,MACD,IAAK,cACJjC,EAAMiC,OAAS,QACf,MACD,IAAK,oBACJjC,EAAMwE,OAASf,EAAOb,QAMxB,OAAO5C,GCzCO2E,EAFDC,YAAYC,YAAgB,CAAE3E,UAASwD,OAAM1B,gBAAgB,ICuBpE,SAAS8C,EAAgBpC,GAC/B,MAAO,CACNC,KAAM,kBACNC,QAASF,GCWJ,SAASqC,EAAab,GAE5B,OAZM,WACN,IAAIc,EAAOC,EAAMC,WAAWxB,KAC5B,IAAqB,IAAjBsB,EAAKrB,QACoC,IAAxCqB,EAAKpB,UAAUoB,EAAKrB,QAAQI,cAC/BkB,EAAMzC,SDdD,CACNG,KAAM,sBACNC,QCYoCoC,EAAKrB,SAO1CwB,GACO,CACNxC,KAAM,eACNC,QAASsB,GAIJ,SAASkB,EAAaC,GAC5B,MAAO,CACN1C,KAAM,qBACNC,QAASyC,G,IC/CLC,E,4MACLC,YAAc,SAAC9E,GAEd,EAAKpB,MAAM+F,aAAa,CAAE,EAAG,EAAG,EAAG,K,EAGpCI,cAAgB,SAAC/E,EAAIyD,GACpB,IAAImB,EAAM,EAAKhG,MAAM4E,SAASJ,OACa,MAAvC,EAAKxE,MAAM4E,SAAShD,OAAO0B,KAAK,IACnC0C,EAAM,CAAE,EAAG,EAAG,EAAG,IACbnB,EAAQ,GAAK,EAEjBmB,EAAInB,EAAQ,IAAMmB,EAAInB,EAAQ,GAAK,GAAK,EAEzC,EAAK7E,MAAM+F,aAAaC,I,uDAGf,IAAD,OACR,OACC,kBAAC,IAAM9D,SAAP,KACC,yBAAKjC,UAAW,CAAE,mBAAoBE,IAAOiG,aAAc7F,KAAK,MAC/D,yBAAKN,UAAW,CAAE,wCAAyCE,IAAOiG,aAAc7F,KAAK,MACpF,yBAAKN,UAAU,6BACd,2BACCA,UAAU,mBACVqD,KAAK,QACLnC,QAAS,SAACC,GAAD,OAAQ,EAAK+E,cAAc/E,EAAI,IACxCiF,QAA0C,GAAjCC,KAAKtG,MAAM4E,SAASJ,OAAO,KAErC,2BAAOvE,UAAW,CAAE,mBAAoBE,IAAOoG,cAAehG,KAAK,WACvCiB,IAA1B8E,KAAKtG,MAAMwG,QAAQ,GAAmBF,KAAKtG,MAAMwG,QAAQ,GAAK,MAIlE,yBAAKvG,UAAW,CAAE,wCAAyCE,IAAOiG,aAAc7F,KAAK,MACpF,yBAAKN,UAAU,6BACd,2BACCA,UAAU,mBACVqD,KAAK,QACLnC,QAAS,SAACC,GAAD,OAAQ,EAAK+E,cAAc/E,EAAI,IACxCiF,QAA0C,GAAjCC,KAAKtG,MAAM4E,SAASJ,OAAO,KAErC,2BAAOvE,UAAW,CAAE,mBAAoBE,IAAOoG,cAAehG,KAAK,WACvCiB,IAA1B8E,KAAKtG,MAAMwG,QAAQ,GAAmBF,KAAKtG,MAAMwG,QAAQ,GAAK,OAKnE,yBAAKvG,UAAW,CAAE,mBAAoBE,IAAOiG,aAAc7F,KAAK,MAC/D,yBAAKN,UAAW,CAAE,wCAAyCE,IAAOiG,aAAc7F,KAAK,MACpF,yBAAKN,UAAU,6BACd,2BACCA,UAAU,mBACVqD,KAAK,QACLnC,QAAS,SAACC,GAAD,OAAQ,EAAK+E,cAAc/E,EAAI,IACxCiF,QAA0C,GAAjCC,KAAKtG,MAAM4E,SAASJ,OAAO,KAErC,2BAAOvE,UAAW,CAAE,mBAAoBE,IAAOoG,cAAehG,KAAK,WACvCiB,IAA1B8E,KAAKtG,MAAMwG,QAAQ,GAAmBF,KAAKtG,MAAMwG,QAAQ,GAAK,MAIlE,yBAAKvG,UAAW,CAAE,wCAAyCE,IAAOiG,aAAc7F,KAAK,MACpF,yBAAKN,UAAU,6BACd,2BACCA,UAAU,mBACVqD,KAAK,QACLnC,QAAS,SAACC,GAAD,OAAQ,EAAK+E,cAAc/E,EAAI,IACxCiF,QAA0C,GAAjCC,KAAKtG,MAAM4E,SAASJ,OAAO,KAErC,2BAAOvE,UAAW,CAAE,mBAAoBE,IAAOoG,cAAehG,KAAK,WACvCiB,IAA1B8E,KAAKtG,MAAMwG,QAAQ,GAAmBF,KAAKtG,MAAMwG,QAAQ,GAAK,OAKnE,4BACCvG,UAAU,+BACVO,MAAO,CAAEiG,SAAU,UAAWxE,QAASqE,KAAKtG,MAAM0G,UAAY,OAAS,IACvEvF,QAASmF,KAAKJ,aAHf,c,GA5EkBS,aAyGPjG,eAjBS,SAACC,GACxB,MAAO,CACN2D,OAAQ3D,EAAM0D,KAAKC,OACnBkC,QACgE,KAA/D7F,EAAM0D,KAAKE,UAAU5D,EAAM0D,KAAKC,QAAQ1C,OAAOgF,YAC5CC,KAAKC,MAAMnG,EAAM0D,KAAKE,UAAU5D,EAAM0D,KAAKC,QAAQ1C,OAAOgF,aAC1D,GACJhC,SAAUjE,EAAM0D,KAAKE,UAAU5D,EAAM0D,KAAKC,YAIjB,SAACnB,GAC3B,MAAO,CACN4C,aAAc,SAACC,GAAD,OAAS7C,EAAS4C,EAAaC,QAIhCtF,CAA6CuF,GC5F5D,IAOevF,eAPS,SAACC,GACxB,MAAO,CACN2D,OAAQ3D,EAAM0D,KAAKC,OACnBM,SAAUjE,EAAM0D,KAAKE,UAAU5D,EAAM0D,KAAKC,WAI7B5D,EAtBf,SAAeV,GACd,OACC,kBAAC,IAAMkC,SAAP,KACC,yBACCjC,UAAW,CAAE,sBAAuBM,KAAK,KACzCwB,IAAI,YACJvB,MAAO,CACNyB,QAAyC,KAAhCjC,EAAM4E,SAAShD,OAAOmF,MAAe,OAAS,gBAExDxF,IAAqC,KAAhCvB,EAAM4E,SAAShD,OAAOmF,MAAe,IAAMrF,OAAOC,UAAY3B,EAAM4E,SAAShD,OAAOmF,Y,iBCPvFC,E,kDACL,WAAYhH,GAAQ,IAAD,8BAClB,cAAMA,IACDW,MAAQ,CACZmE,MAAO,EACPmC,WAAY,QAEb,EAAKC,SAAW,KANE,E,qDAmBT,IAAD,OACR,OACC,yBAAKhH,GAAIC,IAAOgH,MAAOlH,UAAU,gBAChC,wBAAIA,UAAU,eAAeqG,KAAKtG,MAAMoH,OACxC,uBAAGnH,UAAU,cAAcC,GAAIC,IAAOkH,MACpCf,KAAKtG,MAAMsH,aAEb,4BACCC,IAAK,SAACC,GAAD,OAAS,EAAKN,SAAWM,GAC9BrG,QAAS,WACR,EAAKsG,SAAS,CAAER,WAAY,KACI,cAA5B,EAAKjH,MAAM0C,cACd,EAAK1C,MAAM0H,MAAM,GACjB,EAAK1H,MAAMyF,gBAAgBoB,KAAKc,UAAU,CAAErE,KAAM,YAGlDhC,YAAW,WAEV,EAAK4F,SAASU,UACZ,MAGL3H,UAAU,uCACVO,MAAO,CAAEyB,QAASqE,KAAKtG,MAAMiC,UAhB9B,QAmBC,0BACChC,UAAU,wCACVO,MAAO,CAAEyB,QAASqE,KAAK3F,MAAMsG,eAG/B,yBAAKhH,UAAU,OAAOC,GAAIC,IAAO0H,SAChC,8CAAoBvB,KAAK3F,MAAMmE,OAC/B,6BACA,6CAAmBwB,KAAKtG,MAAM8H,SAASC,YACvC,8BACkC,GAAjCzB,KAAKtG,MAAM8H,SAASE,SACpB,GAEA,sCAAY1B,KAAKtG,MAAM8H,SAASE,SAAhC,cAGF,yBAAK/H,UAAU,aACd,wBAAIA,UAAU,mBACb,+CACA,wCACA,wDACA,0EACA,wDACA,4EACA,6EACA,kGAED,yBAAKA,UAAU,6BACd,4BAAQA,UAAU,sBAClB,2BAAOA,UAAU,QAAjB,aACA,6BAEA,4BAAQA,UAAU,wBAClB,6CACA,6BACA,4BAAQA,UAAU,yBAClB,mDACA,6BACA,4BAAQA,UAAU,sBAClB,sDACA,6BACA,4BAAQA,UAAU,yBAClB,2CACA,6BACA,4BACC,wBAAIA,UAAU,oBACb,uBAAGA,UAAU,QAAb,oD,GA5Fc0G,aAAhBK,EAUEiB,yBAA2B,SAACjI,EAAOW,GACzC,IAAIuH,EAAI,EAIR,OAHAlI,EAAMuE,UAAU4D,SAAQ,SAACC,GACxBF,GAAKE,EAAGxG,OAAOkD,SAET,CACNA,MAAOoD,IAsFV,IAgBexH,eAhBS,SAACC,GACxB,MAAO,CACNyG,MAAOzG,EAAM0D,KAAKzC,OAASjB,EAAM0D,KAAKzC,OAAOwF,MAAQ,GACrDE,YAAa3G,EAAM0D,KAAKzC,OAASjB,EAAM0D,KAAKzC,OAAO0F,YAAc,GACjE/C,UAAW5D,EAAM0D,KAAKE,UACtBuD,SAAUnH,EAAM0D,KAAKzC,OACrBc,aAAc/B,EAAMgC,YAAYC,WAIP,SAACO,GAC3B,MAAO,CACNsC,gBAAiB,SAACpC,GAAD,OAAUF,EAASsC,EAAgBpC,QAIvC3C,CAA6CsG,GCnHtDqB,E,4MACLC,MAAQ,WAEP,IAAIC,EAAM,GAQV,OAPI,EAAKvI,MAAM0G,WAAiD,MAApC,EAAK1G,MAAM4E,SAAShD,OAAO0B,OAErDiF,EADG,EAAKvI,MAAM4E,SAASE,QAAU,EAAK9E,MAAM4E,SAAShD,OAAOkD,MACtD,wBAAI7E,UAAU,+BAAd,WACgC,IAA9B,EAAKD,MAAM4E,SAASE,MACtB,wBAAI7E,UAAU,+BAAd,qBACI,wBAAIA,UAAU,8BAAd,UAELsI,G,uDAGE,IAAD,OACR,OACC,yBAAKrI,GAAIC,IAAOqI,aAAcvI,UAAU,qCACduB,IAAxB8E,KAAKtG,MAAM4E,WAAiD,IAAvB0B,KAAKtG,MAAMsE,OAChD,kBAAC,EAAD,CAASrC,QAAQ,SAEjB,kBAAC,IAAMC,SAAP,KACC,yBAAKjC,UAAU,mCACd,wBAAIA,UAAW,CAAE,qBAAsBE,IAAOsI,KAAMlI,KAAK,MAAzD,KACI+F,KAAKtG,MAAMsE,OAAS,GAExB,wBAAIrE,UAAW,CAAE,sBAAuBE,IAAOuI,OAAQnI,KAAK,MAC1D+F,KAAKtG,MAAM4E,SAAShD,OAAO+G,MAE7B,yBAAK1I,UAAW,CAAEE,IAAOyI,YAAa,qBAAsBrI,KAAK,MAChE,4BAAK+F,KAAKtG,MAAM4E,SAAShD,OAAOkD,OAChC,4BAAKwB,KAAKtG,MAAM4E,SAAShD,OAAO0B,QAIlC,kBAAC,EAAD,MACA,6BAEqC,MAApCgD,KAAKtG,MAAM4E,SAAShD,OAAO0B,MACQ,MAApCgD,KAAKtG,MAAM4E,SAAShD,OAAO0B,MACS,OAApCgD,KAAKtG,MAAM4E,SAAShD,OAAO0B,MACS,OAApCgD,KAAKtG,MAAM4E,SAAShD,OAAO0B,MACS,OAApCgD,KAAKtG,MAAM4E,SAAShD,OAAO0B,MACS,QAApCgD,KAAKtG,MAAM4E,SAAShD,OAAO0B,KAC1B,kBAAC,EAAD,CAASA,KAAMgD,KAAKtG,MAAM4E,SAAShD,OAAO0B,KAAMoD,UAAWJ,KAAKtG,MAAM0G,YAC/B,MAApCJ,KAAKtG,MAAM4E,SAAShD,OAAO0B,KAC9B,kBAAC,IAAMpB,SAAP,KACC,2BAAOjC,UAAU,kBAAjB,WACA,2BACCA,UAAW,CAAE,8BAA+BE,IAAO0I,QAAStI,KAAK,KACjEC,MAAO,CAAEyB,QAAS,UAClBqB,KAAK,OACL7B,KAAK,SACLqH,MAAOxC,KAAKtG,MAAM4E,SAASJ,OAC3BuE,SAAU,SAAC3H,GAAD,OAAQ,EAAKpB,MAAM+F,aAAa3E,EAAG4H,OAAOF,QACpDG,SAAU3C,KAAKtG,MAAM0G,aAIvB,yBAAKzG,UAAU,wDACd,2BAAOA,UAAU,QAAjB,WACA,8BACCA,UAAW,CAAE,0BAA2BM,KAAK,KAC7CC,MAAO,CAAEyB,QAAS,UAClBqB,KAAK,OACL7B,KAAK,SACLyH,KAAK,IACLC,KAAK,KACLL,MAAOxC,KAAKtG,MAAM4E,SAASJ,OAC3BuE,SAAU,SAAC3H,GAAD,OAAQ,EAAKpB,MAAM+F,aAAa3E,EAAG4H,OAAOF,QACpDG,SAAU3C,KAAKtG,MAAM0G,aAIvBJ,KAAKgC,QACN,6BACA,4BACCrI,UAAU,gCACVO,MAAO,CAAEyB,QAASqE,KAAKtG,MAAM0G,UAAY,OAAS,SAClDvF,QAASmF,KAAKtG,MAAMoJ,MAHrB,wB,GA3EiBzC,aAwGRjG,eAfS,SAACC,GACxB,MAAO,CACN2D,OAAQ3D,EAAM0D,KAAKC,OACnBM,SAAUjE,EAAM0D,KAAKE,UAAU5D,EAAM0D,KAAKC,QAC1CqB,KAAMhF,EAAM0D,SAIa,SAAClB,GAC3B,MAAO,CACN4C,aAAc,SAACC,GAAD,OAAS7C,EAAS4C,EAAaC,KAC7CoD,KAAM,kBAAMjG,EJnDN,CACNG,KAAM,eACNC,QAAS,WIqDI7C,CAA6C2H,G,iBC3GtDgB,E,uKACK,IACL9E,EADI,OAsCR,OAnCAA,EAAY+B,KAAKtG,MAAMuE,UAAUI,KAAI,SAACtB,EAAMwB,GAC3C,IACIyE,EAAM,GACV,OAFYjG,EAAK1C,MAAMJ,KAAK,KAG3B,IAAK,MACJ+I,EAAM,aACN,MACD,IAAK,MACL,IAAK,MACJA,EAAM,cACN,MACD,IAAK,MACL,IAAK,MACJA,EAAM,cACN,MACD,IAAK,MACL,IAAK,MACJA,EAAM,WACN,MACD,QACCA,EAAM,WAGR,OADIzE,IAAU,EAAK7E,MAAMsE,SAAQgF,EAAM,eAEtC,4BACCrJ,UAAW,CAAE,UAAWE,IAAOoJ,KAAMD,GAAM/I,KAAK,KAChDiJ,IAAK3E,EACL1D,QAAS,kBAAM,EAAKnB,MAAM0F,aAAab,IAEvCP,OAAQO,IAAU,EAAK7E,MAAMsE,QAE5BO,EAAQ,MAKX,yBAAK3E,GAAIC,IAAOsJ,WACf,4BACCxJ,UAAW,CACV,4BACAE,IAAOoJ,MACN,IAAMjD,KAAKtG,MAAMsE,OAAS,cAAgB,YAC1C/D,KAAK,KACPY,QAAS,kBAAM,EAAKnB,MAAM0F,cAAc,IAExCpB,QAAS,IAAMgC,KAAKtG,MAAMsE,QAR3B,QAWU,IACTC,O,GArDuBoC,aAwEbjG,gBAbS,SAACC,GACxB,MAAO,CACN2D,OAAQ3D,EAAM0D,KAAKC,OACnBC,UAAW5D,EAAM0D,KAAKE,cAIG,SAACpB,GAC3B,MAAO,CACNuC,aAAc,SAACb,GAAD,OAAW1B,EAASuC,EAAab,QAIlCnE,CAA6C2I,GCzEtDK,G,kDACL,WAAY1J,GAAQ,IAAD,8BAClB,cAAMA,IACDW,MAAQ,CACZgJ,QAAS3J,EAAM4J,UAAY,IAAIC,KAAK7J,EAAM4J,WAAWE,WAAY,IAAID,MAAOC,UAC5EC,KAAuB,GAAjB/J,EAAMgI,SAAgB,IAC5BA,SAA2B,GAAjBhI,EAAMgI,SAAgB,KALf,E,qDAST,IAAD,OACJgC,GAAS,IAAIH,MAAOC,UAAYxD,KAAK3F,MAAMgJ,QAC3CM,EAAMC,KAAKC,MAAM7D,KAAK3F,MAAMoJ,KAAO,KACnCK,EAAUF,KAAKC,MAAMF,EAAM,IAI/B,OAHAA,GAAY,GACR3D,KAAK3F,MAAMoJ,KAAO,EAAGzI,YAAW,kBAAM,EAAKmG,SAAS,CAAEsC,KAAM,EAAKpJ,MAAMqH,SAAWgC,MAAW,KAC5F1D,KAAKtG,MAAMqK,OAAOzC,QAEtB,wBAAI1H,GAAIC,IAAOmK,OAAf,SACQF,EADR,MACoBH,O,GAnBHtD,aA+BLjG,gBANS,SAACC,GACxB,MAAO,CACNiJ,UAAWjJ,EAAM0D,KAAKuF,aAITlJ,CAAyBgJ,IC1BlCa,G,kDACL,WAAYvK,GAAQ,IAAD,8BAClB,cAAMA,IAUPwK,kBAAoB,YAEkB,GAAjC,EAAKxK,MAAM8H,SAASE,UAAmB,EAAKhI,MAAM0G,WACrD,EAAKe,SAAS,CAAE6C,MAAO,kBAAC,GAAD,CAAOtC,SAAU,EAAKhI,MAAM8H,SAASE,SAAUqC,OAAQ,EAAKA,YAdlE,EAiBnBI,WAAa,WAGZ,GADA,EAAKhD,SAAS,CAAER,WAAY,KACC,IAAzB,EAAKjH,MAAM0G,UACd,EAAK1G,MAAM0H,MAAM,OACX,CACN,IAAIgD,EAAa,GACjB,EAAK1K,MAAMuE,UAAU4D,SAAQ,SAAC9E,EAAMwB,GACnC,IAAIqD,EAAI,EACR,OAAQ7E,EAAKzB,OAAO0B,MACnB,IAAK,IACAD,EAAKmB,SAAWnB,EAAKzB,OAAO4C,SAAQ0D,EAAI7E,EAAKzB,OAAOkD,OACxD,MACD,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,KACAzB,EAAKmB,OAAOjE,KAAK,MAAQ8C,EAAKzB,OAAO4C,OACxC0D,EAAI7E,EAAKzB,OAAOkD,MACe,OAArBzB,EAAKzB,OAAO0B,MAAsC,OAArBD,EAAKzB,OAAO0B,OAAe4E,GAAK,GACxE,MACD,IAAK,KACL,IAAK,MACJ,IAAIlC,EAAM3C,EAAKzB,OAAO4C,OAAOmG,MAAM,IAC/BpC,EAAMlF,EAAKmB,OAAOjE,KAAK,IACvBqK,EAAK,CAAE,EAAG,EAAG,GACjB5E,EAAImC,SAAQ,SAAC0C,EAAGhG,GACL,MAANgG,GACHD,EAAG,IAAM,EACU,MAAfrC,EAAI1D,KAAgB+F,EAAG,IAAM,IACvBC,IAAMtC,EAAI1D,KAAQ+F,EAAG,GAAK,OAErB1C,EAAH,IAAV0C,EAAG,GAAmC,QAArBvH,EAAKzB,OAAO0B,MAAkB,EAAI,EAC9CsH,EAAG,GAAKV,KAAKY,IAAI,EAAGF,EAAG,IAAMvH,EAAKzB,OAAOkD,OAChDiG,QAAQ,GAGZL,EAAU,sBAAQA,GAAR,CAAoBxC,OAE/B,IAAIK,EAAM,CAAEjF,KAAM,SAAUwB,MAAO4F,GACnC,EAAK1K,MAAMyF,gBAAgBoB,KAAKc,UAAUY,IAE3C,EAAKd,SAAS,CAAER,WAAY,UAxD5B,EAAKtG,MAAQ,CACZ2J,MAAO,GACPrD,WAAY,QAGb,EAAKoD,OAAS,KARI,E,qDA8DT,IAAD,OACR,OACC,kBAAC,IAAMnI,SAAP,KACC,yBAAKhC,GAAIC,IAAO6K,YAAa/K,UAAU,oBACtC,wBAAIA,UAAU,oCAAoCC,GAAIC,IAAO8K,UAA7D,YAEC,4BACC/K,GAAIC,IAAO+K,OACXjL,UAAU,eACVsH,IAAK,SAACC,GAAD,OAAS,EAAK6C,OAAS7C,GAC5BrG,QAAS,WACR,EAAKsJ,eAGLnE,KAAKtG,MAAM0G,UAAY,SAAW,SACnC,0BACCzG,UAAU,wCACVO,MAAO,CAAEyB,QAASqE,KAAK3F,MAAMsG,gBAMhC,kBAAC,GAAD,MACCX,KAAK3F,MAAM2J,OAGb,kBAAC,EAAD,CAAU5D,UAAWJ,KAAKtG,MAAM0G,iB,GA1FdC,aA8GPjG,gBAdS,SAACC,GACxB,MAAO,CACNwK,GAAIxK,EAAM0D,KAAK8G,GACfrD,SAAUnH,EAAM0D,KAAKzC,OACrB2C,UAAW5D,EAAM0D,KAAKE,cAIG,SAACpB,GAC3B,MAAO,CACNsC,gBAAiB,SAACpC,GAAD,OAAUF,EAASsC,EAAgBpC,QAIvC3C,CAA6C6J,IC9F5D,IAOe7J,gBAPS,SAACC,GACxB,MAAO,CACN4D,UAAW5D,EAAM0D,KAAKE,UACtBoB,KAAMhF,EAAM0D,QAIC3D,EA5Bf,SAAgBV,GACf,IAAIoL,EAAQ,EACRtG,EAAQ,EAMZ,OALA9E,EAAMuE,UAAU4D,SAAQ,SAAC9E,EAAMwB,GAC9BuG,GAAS/H,EAAKzB,OAAOkD,MACrBA,GAASzB,EAAKyB,SAId,yBAAK5E,GAAIC,IAAOgH,MAAOlH,UAAU,gCAChC,wBAAIA,UAAU,aAAd,WACA,wBAAIA,UAAU,aACZ6E,EADF,IACUsG,GAEV,4BAAQnL,UAAU,kBAAkBkB,QAAS,kBAAMnB,EAAM0H,MAAM,KAA/D,qBCPY2D,ICKTC,G,kDACL,WAAYtL,GAAQ,IAAD,8BAClB,cAAMA,IAKPuL,aAAe,WACd,IAAI/B,EAAMgC,KACV,EAAKC,GAAK,IAAIC,UAAU,QAAUhK,OAAOiK,SAAW,6BAA+BnC,EAAM,KAEzF,EAAKiC,GAAGG,OAAS,WAChB,EAAK5L,MAAM6L,UAAU,EAAKJ,KAE3B,EAAKA,GAAGK,UAAY,SAAC1K,GACpB,EAAK2K,MAAQ,EACb,IAAIC,EAAMnF,KAAKC,MAAM1F,EAAGiC,MACxB,OAAQ2I,EAAI1I,MACX,IAAK,YACJ,EAAKtD,MAAMiM,eAAeD,EAAIE,UAC9B,EAAKlM,MAAMmM,kBACX,MACD,IAAK,cACJ,EAAKnM,MAAMoM,6BAA6BJ,EAAIE,UAC5C,EAAKlM,MAAMmM,kBACX,MACD,IAAK,gBACJ,EAAKnM,MAAMqM,kBACX,MACD,IAAK,oBACJ,EAAKrM,MAAMsM,gBACX,MACD,IAAK,YACJ,EAAKtM,MAAM0G,UAAUG,KAAKC,MAAM,EAAK9G,MAAMiF,WAAW,IAAIH,OAC1D,EAAK9E,MAAMmF,OAAO,GAClB,EAAKnF,MAAMqM,oBAMd,EAAKZ,GAAGc,QAAU,SAACnL,GACC,IAAf,EAAK2K,QACR,EAAK/L,MAAMwM,eACXlL,WAAW,EAAKiK,aAAc,OAIhC,EAAKE,GAAGgB,QAAU,SAACrL,GAClB,EAAK2K,OAAS,EACV,EAAKA,MAAQ,GAChB,EAAK/L,MAAMwM,eACXlL,WAAW,EAAKiK,aAAc,OAE9B,EAAKvL,MAAM0M,cACX,EAAKX,MAAQ,EACRY,UAAUC,SACdlL,OAAOmL,SAAW,WAEjB,EAAK7M,MAAMwM,eACX,EAAKjB,oBA3DS,EAiEnBf,kBAAoB,WACnB,EAAKe,gBAlEa,EAoEnBuB,cAAgB,WACf,IAAIvI,EAAYqB,EAAMC,WAAWxB,KAAKE,UACtC,GAA2B,IAAvB,EAAKvE,MAAMkF,QACf,GAAyC,IAArC,EAAKlF,MAAMgF,eAAeK,OAAc,CAC3CvC,QAAQC,IAAI,2BACZ,IAAIgK,EAAOxI,EAAU,EAAKvE,MAAMgF,eAAe,IAFJ,EAGnB,CAAE+H,EAAKvI,OAAQuI,EAAKpM,OAAtC6D,EAHqC,KAG7B7D,EAH6B,KAIvC0C,EAAO,CACVC,KAAM,iBACNuB,MAAO,EAAK7E,MAAMgF,eAAe,GACjCzB,QAAS,CAAEiB,SAAQ7D,UAEpB0C,EAAOwD,KAAKc,UAAUtE,GACtB,EAAKrD,MAAMgN,cACX,EAAKvB,GAAGwB,KAAK5J,QACP,GAAqC,IAAjC,EAAKrD,MAAMiF,WAAWI,OAAc,CAC9C,IAAIhC,EAAO,EAAKrD,MAAMiF,WAAW,GACjC,EAAKjF,MAAMgN,cACX,EAAKvB,GAAGwB,KAAK5J,KApFd,EAAKoI,GAAK,KACV,EAAKM,MAAQ,EAHK,E,qDA4FlB,OAFAzF,KAAKwG,gBACLhK,QAAQC,IAAI,YAAauD,KAAKtG,MAAM+E,QAC7B,kBAAC,IAAM7C,SAAP,U,GA7FmByE,aA0HbjG,gBAzBS,SAACC,GACxB,MAAO,CACNoE,OAAQpE,EAAMgC,YACdsC,WAAYtE,EAAMgC,YAAYsC,WAC9BD,eAAgBrE,EAAMgC,YAAYqC,eAClCE,QAASvE,EAAMgC,YAAYuC,QAC3BC,OAAQxE,EAAMgC,YAAYwC,WAID,SAAChC,GAC3B,MAAO,CACN0I,UAAW,SAACJ,GAAD,OAAQtI,EX9Hd,SAAmBsI,GACzB,MAAO,CACNnI,KAAM,YACNC,QAASkI,GW2HmBI,CAAUJ,KACtCU,gBAAiB,kBAAMhJ,EXvHjB,CACNG,KAAM,YACNC,QAAS,QWsHT0I,eAAgB,SAAC5I,GAAD,OAAUF,EV7HrB,SAAwBE,GAC9B,IAAIkB,EAAYlB,EAAKkB,UAAUI,KAAI,SAACtB,GAKnC,OAJAA,EAAKmB,OAAS,GACdnB,EAAK1C,MAAQ,CAAE,EAAG,EAAG,GACrB0C,EAAKqB,QAAU,EACX,CAAE,IAAK,IAAK,KAAM,KAAM,KAAM,OAAQD,SAASpB,EAAKzB,OAAO0B,QAAOD,EAAKmB,OAAS,CAAE,EAAG,EAAG,EAAG,IACxFnB,KAIR,OAFAA,EAAI,UAAgB6J,OAAO/I,OAAO,GAAII,GACtClB,EAAI,QAAc,EACX,CACNC,KAAM,iBACNC,QAASF,GUiH0B4I,CAAe5I,KAClDmJ,aAAc,kBAAMrJ,EXlHd,CACNG,KAAM,eACNC,QAAS,QWiHT6I,6BAA8B,SAAC/I,GAAD,OAAUF,EV/GnC,SAAsCE,GAC5C,IAAIkB,EAAYlB,EAAKkB,UAAUI,KAAI,SAACtB,GAEnC,OADAA,EAAKqB,QAAU,EACRrB,KAIR,OAFAA,EAAKkB,UAAY2I,OAAO/I,OAAO,GAAII,GACnClB,EAAKiB,QAAU,EACR,CACNhB,KAAM,iBACNC,QAASF,GUsGwC+I,CAA6B/I,KAC9E2J,YAAa,kBAAM7J,EX/Fb,CACNG,KAAM,cACNC,QAAS,QW8FT+I,cAAe,kBAAMnJ,EXxFf,CACNG,KAAM,gBACNC,QAAS,QWuFT8I,gBAAiB,kBAAMlJ,EXjFjB,CACNG,KAAM,kBACNC,QAAS,QWgFTmJ,YAAa,kBAAMvJ,EX3Eb,CACNG,KAAM,cACNC,QAAS,QW0ETmD,UAAW,SAAC5B,GAAD,OAAW3B,EVvEjB,SAAmB2B,GACzB,MAAO,CACNxB,KAAM,YACNC,QAASuB,GUoEsB4B,CAAU5B,QAI5BpE,CAA6C4K,IAExDE,GAAa,WAEhB,IAAI2B,EAAMzL,OAAOwC,SAAS7D,KACtB+M,EAAOD,EAAI9H,OACXgI,EAAmBF,EAAIG,YAAY,KAKvC,OAJID,IAAqBD,EAAO,IAE/BC,GADAF,EAAMA,EAAII,MAAM,GAAI,IACGD,YAAY,MAE7BH,EAAIK,UAAUH,EAAmB,IC3InCI,G,kDAEL,WAAYzN,GAAQ,IAAD,8BAClB,cAAMA,IAqBP0H,MAAQ,SAACgG,GAER,EAAKjG,SAAS,CAAEC,MAAOgG,KAxBL,EA2BnBvI,OAAS,WACR,IAAIoD,EACJ,OAAQ,EAAK5H,MAAM+G,OAClB,KAAK,EACJa,EAAM,kBAAC,EAAD,CAASb,MAAO,EAAKA,MAAOzF,QAAQ,UAC1C,MACD,KAAK,EACJsG,EAAM,kBAAC,GAAD,CAASb,MAAO,EAAKA,MAAOhB,UAAW,IAC7C,MACD,KAAK,EACJ6B,EAAM,kBAAC,GAAD,CAAQb,MAAO,EAAKA,QAC1B,MACD,KAAK,EACJa,EAAM,kBAAC,GAAD,CAASb,MAAO,EAAKA,MAAOhB,UAAW,IAI/C,OAAO6B,GA1CP,EAAK5H,MAAQ,CACZ+G,MAAO,GAER,EAAK1H,MAAM2N,kBAAkB,EAAKjG,OALhB,E,qDAgDlB,OACC,yBACCxH,GAAIC,IAAOyN,KACX3N,UACqB,GAApBqG,KAAK3F,MAAM+G,MAAa,CAAE,kBAAmBvH,IAAO0N,YAAatN,KAAK,KAAO,mBAG7E+F,KAAKnB,c,GAzDSwB,aAuEJjG,eARS,MAEG,SAACyC,GAC3B,MAAO,CACNwK,kBAAmB,SAACG,GAAD,OAAU3K,EZbxB,SAA2B2K,GACjC,MAAO,CACNxK,KAAM,oBACNC,QAASuK,GYU6BH,CAAkBG,QAI3CpN,CAA6C+M,ICtE7CM,OARf,WACC,OACC,kBAAC,IAAM7L,SAAP,KACC,kBAAC,EAAD,MADD,IACS,kBAAC,GAAD,QCCXR,OAAOa,KAAO,GACdb,OAAOiK,SAAWjK,OAAOwC,SAAS8J,KAElCtM,OAAOC,UAAY,+CACnBD,OAAOiC,KAAO,cAEdsK,IAASC,OACR,kBAAC,IAAD,CAAUtI,MAAON,GAChB,kBAAC,GAAD,MACA,kBAAC,GAAD,OAED6I,SAASC,eAAe,W","file":"static/js/main.b9918d06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"questionMain\":\"Question_questionMain__1_rxd\",\"qno\":\"Question_qno__WrjZj\",\"qtext\":\"Question_qtext__Z1Mmf\",\"qinfo\":\"Question_qinfo__qsAMT\",\"rightpannel\":\"Question_rightpannel__2UY0F\",\"marksinp\":\"Question_marksinp__2Uhvn\",\"choicesCont\":\"Question_choicesCont__wBpp9\",\"choices\":\"Question_choices__lz6pm\",\"choicesLabel\":\"Question_choicesLabel__1Ls73\",\"ansInp\":\"Question_ansInp__egB3m\",\"desc\":\"Question_desc__2_tAt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"UserBtn_navLink__3C6qU\",\"userBtn\":\"UserBtn_userBtn__2502Q\",\"userBtnImg\":\"UserBtn_userBtnImg__1XDNf\",\"userPannel\":\"UserBtn_userPannel__SYTvw\",\"userPannelLink\":\"UserBtn_userPannelLink__squgZ\",\"userData\":\"UserBtn_userData__ZFyrl\",\"userBtnCont\":\"UserBtn_userBtnCont__1BfAU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topBar\":\"Top_topBar__1M36g\",\"navLink\":\"Top_navLink__31pSM\",\"edu\":\"Top_edu__3lhuD\",\"navCont\":\"Top_navCont__2D-Nz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dot1\":\"SocketStatus_dot1__2gVtp\",\"dot1Anim\":\"SocketStatus_dot1Anim__2GG5M\",\"dot2\":\"SocketStatus_dot2__2ZiMM\",\"dot2Anim\":\"SocketStatus_dot2Anim__2b30V\",\"dot3\":\"SocketStatus_dot3__2aMyN\",\"dot3Anim\":\"SocketStatus_dot3Anim__3SIAx\",\"status\":\"SocketStatus_status__LHVNz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"entry\":\"Initial_entry__-bfNu\",\"desc\":\"Initial_desc__iz51X\",\"details\":\"Initial_details__2dAez\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__1oWsp\",\"fullScreen\":\"Main_fullScreen__2WUCL\",\"timer\":\"Main_timer__2qXw5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebarMain\":\"Sidebar_sidebarMain__3xpJL\",\"sideHead\":\"Sidebar_sideHead__3_rEt\",\"addBtn\":\"Sidebar_addBtn__17vBb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"qBtnsCont\":\"QuestionsBtns_qBtnsCont__r19tx\",\"btns\":\"QuestionsBtns_btns__3JyHc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notifBtn\":\"Notification_notifBtn__U2Qxp\"};","import React from 'react';\nimport styles from './css/Top.module.css';\n\nfunction Nav(props) {\n\treturn (\n\t\t<div className=\"ml-4 pl-4\" id={styles.navCont}>\n\t\t\t<a href=\"/\" className={[ styles.navLink, 'ml-4 mr-4' ].join(' ')}>\n\t\t\t\tHome\n\t\t\t</a>\n\t\t\t<a href=\"#\" className={[ styles.navLink, 'ml-4 mr-4' ].join(' ')} style={{ opacity: '30%' }}>\n\t\t\t\tBlog\n\t\t\t</a>\n\t\t\t<a href=\"#\" className={[ styles.navLink, 'ml-4 mr-4' ].join(' ')} style={{ opacity: '30%' }}>\n\t\t\t\tContact\n\t\t\t</a>\n\t\t</div>\n\t);\n}\n\nexport default Nav;\n","import React, { useState } from 'react';\nimport styles from './css/UserBtn.module.css';\n\nimport { connect } from 'react-redux';\n\nfunction UserBtn(props) {\n\tconst [ userPannelVis, changeVis ] = useState('none');\n\treturn (\n\t\t<div className=\"ml-2\" id={styles.userBtnCont}>\n\t\t\t<button\n\t\t\t\tclassName=\"p-0\"\n\t\t\t\tid={styles.userBtn}\n\t\t\t\tonClick={(ev) => changeVis(userPannelVis === 'block' ? 'none' : 'block')}\n\t\t\t\tonBlur={(ev) => setTimeout(changeVis, 10, 'none')}\n\t\t\t>\n\t\t\t\t<img\n\t\t\t\t\tsrc={props.profile.name !== undefined ? window.media_url + props.profile.fields.profile_pic : ''}\n\t\t\t\t\tid={styles.userBtnImg}\n\t\t\t\t\talt=\"\"\n\t\t\t\t/>\n\t\t\t</button>\n\t\t\t<div\n\t\t\t\tonClick={(ev) => setTimeout(changeVis, 20, 'block')}\n\t\t\t\tid={styles.userPannel}\n\t\t\t\tclassName=\"p-2 pr-3 bg-white\"\n\t\t\t\tstyle={{ display: userPannelVis }}\n\t\t\t>\n\t\t\t\t{props.profile.name !== undefined ? (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<span className={styles.userData}>{props.profile.username}</span>\n\t\t\t\t\t\t<span className={[ styles.userData, 'text-secondary' ].join(' ')}>{props.profile.email}</span>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\t\t\t\t<hr className=\"m-0 mt-1\" />\n\t\t\t\t<a\n\t\t\t\t\thref=\"#\"\n\t\t\t\t\tclassName={[ styles.navLink, styles.userPannelLink, 'pb-0 mt-2 mb-1 mr-2 ml-1' ].join(' ')}\n\t\t\t\t\tstyle={{ opacity: '30%' }}\n\t\t\t\t>\n\t\t\t\t\tProfile\n\t\t\t\t</a>\n\t\t\t\t<a\n\t\t\t\t\thref={window.base + '/user/logout/'}\n\t\t\t\t\tclassName={[ styles.navLink, styles.userPannelLink, 'pb-0 mb-0 mr-2 ml-1' ].join(' ')}\n\t\t\t\t>\n\t\t\t\t\tLogout\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tprofile: state.Profile\n\t};\n};\n\nexport default connect(mapStateToProps)(UserBtn);\n","import React from 'react';\nimport styles from './css/Notification.module.css';\n\nfunction Notification(props) {\n\treturn (\n\t\t<div className=\"ml-auto mr-4\" style={{ opacity: '30%' }}>\n\t\t\t<button className=\"material-icons  btn\" id={styles.notifBtn}>\n\t\t\t\tnotifications\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport default Notification;\n","import React from 'react';\nimport styles from './css/SocketStatus.module.css';\n\nimport { connect } from 'react-redux';\n\nfunction SocketStatus(props) {\n\tlet disp = 'default';\n\tconsole.log('status', props.socketStatus);\n\tswitch (props.socketStatus) {\n\t\tcase 'connecting':\n\t\tcase 'saving':\n\t\tcase 'reconnecting':\n\t\tcase 'fetching':\n\t\t\tdisp = (\n\t\t\t\t<h6 className=\"text-muted mb-0 pb-0\" id={styles.status}>\n\t\t\t\t\t{props.socketStatus}\n\t\t\t\t\t<span id={styles.dot1}>.</span>\n\t\t\t\t\t<span id={styles.dot2}>.</span>\n\t\t\t\t\t<span id={styles.dot3}>.</span>\n\t\t\t\t</h6>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'saved':\n\t\t\tdisp = (\n\t\t\t\t<h6 className=\"text-muted\" id={styles.status}>\n\t\t\t\t\tAll previous changes saved\n\t\t\t\t</h6>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'connected':\n\t\t\tdisp = (\n\t\t\t\t<h6 className=\"text-muted\" id={styles.status}>\n\t\t\t\t\tConnected\n\t\t\t\t</h6>\n\t\t\t);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tdisp = (\n\t\t\t\t<h6 className=\"text-muted\" id={styles.status}>\n\t\t\t\t\t{props.socketStatus}\n\t\t\t\t</h6>\n\t\t\t);\n\t\t\tbreak;\n\t}\n\treturn <div className=\"ml-4 pb-0 mt-4\">{disp}</div>;\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tsocketStatus: state.SocketState.status\n\t};\n};\n\nexport default connect(mapStateToProps)(SocketStatus);\n","import React, { useEffect } from 'react';\nimport styles from './css/Top.module.css';\nimport Nav from './Nav.js';\nimport UserBtn from './UserBtn.js';\nimport Notiification from './Notification.js';\nimport SocketStatus from './SockerStatus.js';\n\nimport { connect } from 'react-redux';\nimport { updateProfile } from './../../redux/actions/Profile.js';\n\n// Entry point for the top bar\nfunction Top(props) {\n\t//Fetching the user profile data\n\tuseEffect(\n\t\t() => {\n\t\t\tfetch(window.base + '/user/api/profile/', { credentials: window.cred }) //fetching profile data\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then((profileData) => props.updateProfile(profileData));\n\t\t},\n\t\t[ props ]\n\t);\n\treturn (\n\t\t<div id={styles.topBar} className=\"d-flex flex-row align-items-center col-12 pl-2  text-light\">\n\t\t\t<h1 className=\"display-3 ml-2 text-dark\" id={styles.edu} onClick={() => window.location.assign('/')}>\n\t\t\t\t<span>eduHub</span>\n\t\t\t</h1>\n\t\t\t{/* nav will not appear in the mobile view */}\n\t\t\t<Nav />\n\t\t\t<SocketStatus />\n\t\t\t<Notiification />\n\t\t\t<UserBtn />\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = null;\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tupdateProfile: (data) => dispatch(updateProfile(data))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Top);\n","export function updateProfile(data) {\n\treturn {\n\t\ttype: 'updateProfile',\n\t\tpayload: data\n\t};\n}\n","const Profile = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase 'updateProfile':\n\t\t\tstate = { ...action.payload };\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn state;\n};\n\nexport default Profile;\n","const Test = (state = { active: -1, questions: [], fields: {} }, action) => {\n\tstate = { ...state };\n\tswitch (action.type) {\n\t\tcase 'updateTestData':\n\t\t\tstate = { ...action.payload };\n\t\t\tbreak;\n\n\t\tcase 'updateActive':\n\t\t\tstate.active = action.payload;\n\t\t\tif (state.active != -1) state.questions[state.active].state[0] = 1;\n\t\t\tbreak;\n\n\t\tcase 'updateActiveAnswer':\n\t\t\tstate.questions[state.active].answer = action.payload;\n\t\t\tstate.questions[state.active] = { ...state.questions[state.active] };\n\t\t\tif ([ 'F', 'D' ].includes(state.questions[state.active].fields.type)) {\n\t\t\t\tif (state.questions[state.active].answer == '') {\n\t\t\t\t\tstate.questions[state.active].state[1] = 0;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('Working----------');\n\t\t\t\t\tstate.questions[state.active].state[1] = 1;\n\t\t\t\t}\n\t\t\t} else if ([ 'O', 'M', 'ON', 'MP', 'MN', 'MNP' ].includes(state.questions[state.active].fields.type)) {\n\t\t\t\tif (state.questions[state.active].answer.join('') == '0000') {\n\t\t\t\t\tstate.questions[state.active].state[1] = 0;\n\t\t\t\t} else state.questions[state.active].state[1] = 1;\n\t\t\t}\n\t\t\tstate.questions[state.active].changed = 1; //raising the changed falg to 1 for sending the data over ws\n\t\t\tbreak;\n\t\tcase 'markForLater':\n\t\t\tstate.questions[state.active].state[2] = (state.questions[state.active].state[2] + 1) % 2;\n\t\t\tstate.questions[state.active].changed = 1; //raising the changed falg to 1 for sending the data over ws\n\t\t\tbreak;\n\t\tcase 'submitted': //used afetr submtting to update marks for each question\n\t\t\tconsole.log('payload for submtted: ', action.payload);\n\t\t\tstate.questions = state.questions.map((question, index) => {\n\t\t\t\treturn {\n\t\t\t\t\t...question,\n\t\t\t\t\tmarks: action.payload[index]\n\t\t\t\t};\n\t\t\t});\n\t\t\tconsole.log('state after saving', state);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn state;\n};\n\nexport default Test;\n","const SocketState = (\n\tstate = { socket: null, status: 'connecting', questionBuffer: [], dataBuffer: [], isready: 0, screen: null },\n\taction\n) => {\n\tstate = { ...state };\n\tswitch (action.type) {\n\t\tcase 'setSocket':\n\t\t\tstate.socket = action.payload;\n\t\t\tstate.status = 'fetching';\n\t\t\tbreak;\n\t\tcase 'connected':\n\t\t\tstate.status = 'connected';\n\t\t\tstate.isready = 1;\n\t\t\tbreak;\n\t\tcase 'disconnected':\n\t\t\tstate.status = 'disconnected';\n\t\t\tstate.isready = 0;\n\t\t\tbreak;\n\t\tcase 'addToQuestionBuffer':\n\t\t\tstate.questionBuffer = [ ...state.questionBuffer, action.payload ];\n\t\t\tbreak;\n\t\tcase 'sendingData':\n\t\t\tstate.isready = 0;\n\t\t\tstate.status = 'saving';\n\t\t\tbreak;\n\t\tcase 'addToDataBuffer':\n\t\t\tstate.dataBuffer = [ ...state.dataBuffer, action.payload ];\n\t\t\tbreak;\n\t\tcase 'savedQuestion':\n\t\t\tstate.questionBuffer = [ ...state.questionBuffer.splice(1) ];\n\t\t\tif (state.questionBuffer.length === 0 && state.dataBuffer.length === 0) state.status = 'saved';\n\t\t\tstate.isready = 1;\n\t\t\tbreak;\n\t\tcase 'dataBufferShift':\n\t\t\tstate.dataBuffer = [ ...state.dataBuffer.splice(1) ];\n\t\t\tstate.isready = 1;\n\t\t\tif (state.questionBuffer.length === 0 && state.dataBuffer.length === 0) state.status = 'saved';\n\t\t\tbreak;\n\t\tcase 'SocketError':\n\t\t\tstate.status = 'error';\n\t\t\tbreak;\n\t\tcase 'setScreenFunction':\n\t\t\tstate.screen = action.payload;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn state;\n};\n\nexport default SocketState;\n","import { createStore, combineReducers } from 'redux';\nimport Profile from './reducers/Profile.js';\nimport Test from './reducers/Test.js';\nimport SocketState from './reducers/SocketState.js';\n\nconst Store = createStore(combineReducers({ Profile, Test, SocketState }), {});\n\nexport default Store;\n","export function setSocket(ws) {\n\treturn {\n\t\ttype: 'setSocket',\n\t\tpayload: ws\n\t};\n}\n\nexport function connected() {\n\treturn {\n\t\ttype: 'connected',\n\t\tpayload: null\n\t};\n}\n\nexport function disconnected() {\n\treturn {\n\t\ttype: 'disconnected',\n\t\tpayload: null\n\t};\n}\n\nexport function addToQuestionBuffer(index) {\n\treturn {\n\t\ttype: 'addToQuestionBuffer',\n\t\tpayload: index\n\t};\n}\n\nexport function addToDataBuffer(data) {\n\treturn {\n\t\ttype: 'addToDataBuffer',\n\t\tpayload: data\n\t};\n}\n\nexport function sendingData() {\n\treturn {\n\t\ttype: 'sendingData',\n\t\tpayload: null\n\t};\n}\n\nexport function savedQuestion() {\n\t//is ready flag to 1 and  update socket status and shift the buffer array\n\treturn {\n\t\ttype: 'savedQuestion',\n\t\tpayload: null\n\t};\n}\n\nexport function dataBufferShift() {\n\t//is ready flag to 1 and  update socket status and shift the  data buffer\n\treturn {\n\t\ttype: 'dataBufferShift',\n\t\tpayload: null\n\t};\n}\n\nexport function socketError() {\n\treturn {\n\t\ttype: 'SocketError',\n\t\tpayload: null\n\t};\n}\n\nexport function setScreenFunction(func) {\n\treturn {\n\t\ttype: 'setScreenFunction',\n\t\tpayload: func\n\t};\n}\n","import store from './../Store.js';\nimport { addToQuestionBuffer } from './SocketState.js';\n\nexport function updateTestData(data) {\n\tlet questions = data.questions.map((data) => {\n\t\tdata.answer = '';\n\t\tdata.state = [ 0, 0, 0 ]; //[0] is for visited at, [1] is for answered and [2] is for mared\n\t\tdata.changed = 0;\n\t\tif ([ 'O', 'M', 'ON', 'MP', 'MN', 'MNP' ].includes(data.fields.type)) data.answer = [ 0, 0, 0, 0 ];\n\t\treturn data;\n\t});\n\tdata['questions'] = Object.assign([], questions);\n\tdata['active'] = -1;\n\treturn {\n\t\ttype: 'updateTestData',\n\t\tpayload: data\n\t};\n}\n\nexport function updateTestDataForReconnected(data) {\n\tlet questions = data.questions.map((data) => {\n\t\tdata.changed = 0;\n\t\treturn data;\n\t});\n\tdata.questions = Object.assign([], questions);\n\tdata.active = -1;\n\treturn {\n\t\ttype: 'updateTestData',\n\t\tpayload: data\n\t};\n}\n\nexport function AddToBuffer() {\n\tlet test = store.getState().Test;\n\tif (test.active !== -1) {\n\t\tif (test.questions[test.active].changed === 1) {\n\t\t\tstore.dispatch(addToQuestionBuffer(test.active));\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nexport function updateActive(index) {\n\tAddToBuffer();\n\treturn {\n\t\ttype: 'updateActive',\n\t\tpayload: index\n\t};\n}\n\nexport function updateAnswer(ans) {\n\treturn {\n\t\ttype: 'updateActiveAnswer',\n\t\tpayload: ans\n\t};\n}\n\nexport function markForLater() {\n\treturn {\n\t\ttype: 'markForLater',\n\t\tpayload: null\n\t};\n}\n\nexport function submitted(marks) {\n\treturn {\n\t\ttype: 'submitted',\n\t\tpayload: marks\n\t};\n}\n","import React, { Component } from 'react';\nimport styles from './css/Question.module.css';\n\nimport { connect } from 'react-redux';\nimport { updateAnswer } from './../../redux/actions/Test.js';\n\nclass Choices extends Component {\n\tresetAnswer = (ev) => {\n\t\t//To reset answer\n\t\tthis.props.updateAnswer([ 0, 0, 0, 0 ]);\n\t};\n\n\tanswerHandler = (ev, index) => {\n\t\tlet ans = this.props.question.answer;\n\t\tif (this.props.question.fields.type[0] === 'O') {\n\t\t\tans = [ 0, 0, 0, 0 ];\n\t\t\tans[index - 1] = 1;\n\t\t} else {\n\t\t\tans[index - 1] = (ans[index - 1] + 1) % 2;\n\t\t}\n\t\tthis.props.updateAnswer(ans);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className={[ 'p-0 d-flex w-100', styles.choicesCont ].join(' ')}>\n\t\t\t\t\t<div className={[ 'p-0 d-flex w-100 align-items-baseline', styles.choicesCont ].join(' ')}>\n\t\t\t\t\t\t<div className=\"form-check mt-4 ml-4 pl-4\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"form-check-input\"\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tonClick={(ev) => this.answerHandler(ev, 1)}\n\t\t\t\t\t\t\t\tchecked={this.props.question.answer[0] == 1}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label className={[ 'form-check-label', styles.choicesLabel ].join(' ')}>\n\t\t\t\t\t\t\t\t{this.props.choices[0] !== undefined ? this.props.choices[0] : ''}\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={[ 'p-0 d-flex w-100 align-items-baseline', styles.choicesCont ].join(' ')}>\n\t\t\t\t\t\t<div className=\"form-check mt-4 ml-4 pl-4\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"form-check-input\"\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tonClick={(ev) => this.answerHandler(ev, 2)}\n\t\t\t\t\t\t\t\tchecked={this.props.question.answer[1] == 1}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label className={[ 'form-check-label', styles.choicesLabel ].join(' ')}>\n\t\t\t\t\t\t\t\t{this.props.choices[1] !== undefined ? this.props.choices[1] : ''}\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={[ 'p-0 d-flex w-100', styles.choicesCont ].join(' ')}>\n\t\t\t\t\t<div className={[ 'p-0 d-flex w-100 align-items-baseline', styles.choicesCont ].join(' ')}>\n\t\t\t\t\t\t<div className=\"form-check mt-4 ml-4 pl-4\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"form-check-input\"\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tonClick={(ev) => this.answerHandler(ev, 3)}\n\t\t\t\t\t\t\t\tchecked={this.props.question.answer[2] == 1}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label className={[ 'form-check-label', styles.choicesLabel ].join(' ')}>\n\t\t\t\t\t\t\t\t{this.props.choices[2] !== undefined ? this.props.choices[2] : ''}\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={[ 'p-0 d-flex w-100 align-items-baseline', styles.choicesCont ].join(' ')}>\n\t\t\t\t\t\t<div className=\"form-check mt-4 ml-4 pl-4\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"form-check-input\"\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tonClick={(ev) => this.answerHandler(ev, 4)}\n\t\t\t\t\t\t\t\tchecked={this.props.question.answer[3] == 1}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label className={[ 'form-check-label', styles.choicesLabel ].join(' ')}>\n\t\t\t\t\t\t\t\t{this.props.choices[0] !== undefined ? this.props.choices[3] : ''}\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"btn btn-danger ml-4 mt-2 p-1\"\n\t\t\t\t\tstyle={{ fontSize: 'x-small', display: this.props.submitted ? 'none' : '' }}\n\t\t\t\t\tonClick={this.resetAnswer}\n\t\t\t\t>\n\t\t\t\t\treset\n\t\t\t\t</button>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tactive: state.Test.active,\n\t\tchoices:\n\t\t\tstate.Test.questions[state.Test.active].fields.jsonChoices !== ''\n\t\t\t\t? JSON.parse(state.Test.questions[state.Test.active].fields.jsonChoices)\n\t\t\t\t: [],\n\t\tquestion: state.Test.questions[state.Test.active]\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tupdateAnswer: (ans) => dispatch(updateAnswer(ans))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Choices);\n","import React from 'react';\n\nimport { connect } from 'react-redux';\n\nfunction Image(props) {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<img\n\t\t\t\tclassName={[ 'm-2 ml-4 pl-4 w-50' ].join(' ')}\n\t\t\t\talt=\"not found\"\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: props.question.fields.image === '' ? 'none' : 'inline-block'\n\t\t\t\t}}\n\t\t\t\tsrc={props.question.fields.image === '' ? '#' : window.media_url + props.question.fields.image}\n\t\t\t/>\n\t\t</React.Fragment>\n\t);\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tactive: state.Test.active,\n\t\tquestion: state.Test.questions[state.Test.active]\n\t};\n};\n\nexport default connect(mapStateToProps)(Image);\n","import React, { Component } from 'react';\nimport styles from './css/Initial.module.css';\n\nimport { connect } from 'react-redux';\nimport { addToDataBuffer } from './../../redux/actions/SocketState.js';\n\nclass Initial extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmarks: 0, //For storing total marks\n\t\t\tbtnSpinner: 'none'\n\t\t};\n\t\tthis.enterBtn = null;\n\t}\n\n\tstatic getDerivedStateFromProps = (props, state) => {\n\t\tlet m = 0; //Calculating total marks\n\t\tprops.questions.forEach((qs) => {\n\t\t\tm += qs.fields.marks;\n\t\t});\n\t\treturn {\n\t\t\tmarks: m\n\t\t};\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div id={styles.entry} className=\"p-2 bg-light\">\n\t\t\t\t<h1 className=\"text-center\">{this.props.title}</h1>\n\t\t\t\t<p className=\"text-center\" id={styles.desc}>\n\t\t\t\t\t{this.props.description}\n\t\t\t\t</p>\n\t\t\t\t<button\n\t\t\t\t\tref={(el) => (this.enterBtn = el)}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.setState({ btnSpinner: '' });\n\t\t\t\t\t\tif (this.props.socketStatus === 'connected') {\n\t\t\t\t\t\t\tthis.props.enter(1);\n\t\t\t\t\t\t\tthis.props.addToDataBuffer(JSON.stringify({ type: 'enter' }));\n\t\t\t\t\t\t\t// document.body.requestFullscreen();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t//To click the button every 2 seconds till the data is not fetched\n\t\t\t\t\t\t\t\tthis.enterBtn.click();\n\t\t\t\t\t\t\t}, 5000);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tclassName=\"btn btn-success m-4 pl-4 pr-4 m-auto\"\n\t\t\t\t\tstyle={{ display: this.props.display }}\n\t\t\t\t>\n\t\t\t\t\tEnter\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName=\"ml-2 spinner-border spinner-border-sm\"\n\t\t\t\t\t\tstyle={{ display: this.state.btnSpinner }}\n\t\t\t\t\t/>\n\t\t\t\t</button>\n\t\t\t\t<div className=\"mt-4\" id={styles.details}>\n\t\t\t\t\t<span>Total Marks: {this.state.marks}</span>\n\t\t\t\t\t<br />\n\t\t\t\t\t<span>Instructor: {this.props.testData.instructor}</span>\n\t\t\t\t\t<br />\n\t\t\t\t\t{this.props.testData.duration == -1 ? (\n\t\t\t\t\t\t''\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<span>Time:{this.props.testData.duration} minutes </span>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ml-1 pt-4\">\n\t\t\t\t\t<ul className=\"float-left mt-4\">\n\t\t\t\t\t\t<li>D : Descriptive</li>\n\t\t\t\t\t\t<li>F : Fill</li>\n\t\t\t\t\t\t<li> O : One Option Correct </li>\n\t\t\t\t\t\t<li>ON : One Option Correct(Negative Marking) </li>\n\t\t\t\t\t\t<li>M : Multu Option Correct</li>\n\t\t\t\t\t\t<li>MP : Multu Option Correct(Partially correct)</li>\n\t\t\t\t\t\t<li> MN : Multu Option Correct(Negative Marking) </li>\n\t\t\t\t\t\t<li>MPN : Multu Option Correct(Patrially correct and Neative marking)</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<div className=\"float-left ml-4 pl-4 mt-3\">\n\t\t\t\t\t\t<button className=\"btn btn-dark mr-4\" />\n\t\t\t\t\t\t<label className=\"mt-4\">Unvisited</label>\n\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t<button className=\"btn btn-danger mr-4\" />\n\t\t\t\t\t\t<label>Unanswered</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<button className=\"btn btn-warning mr-4\" />\n\t\t\t\t\t\t<label>Marked For Later</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<button className=\"btn btn-info mr-4\" />\n\t\t\t\t\t\t<label>Answered and Marked</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<button className=\"btn btn-success mr-4\" />\n\t\t\t\t\t\t<label>Answered</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li className=\"text-danger mt-1\">\n\t\t\t\t\t\t\t\t<p className=\"mt-4\">Do not refresh the page during the test</p>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\ttitle: state.Test.fields ? state.Test.fields.title : '',\n\t\tdescription: state.Test.fields ? state.Test.fields.description : '',\n\t\tquestions: state.Test.questions,\n\t\ttestData: state.Test.fields,\n\t\tsocketStatus: state.SocketState.status\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\taddToDataBuffer: (data) => dispatch(addToDataBuffer(data))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Initial);\n","import React, { Component } from 'react';\nimport styles from './css/Question.module.css';\nimport Choices from './Choices.js';\nimport Image from './Image.js';\nimport Initial from './Initial.js';\n\nimport { connect } from 'react-redux';\nimport { updateAnswer, markForLater } from './../../redux/actions/Test.js';\n\nclass Question extends Component {\n\tcheck = () => {\n\t\t// check given marks and total marks and tag the question accordingly\n\t\tlet res = '';\n\t\tif (this.props.submitted && this.props.question.fields.type !== 'D') {\n\t\t\tif (this.props.question.marks === this.props.question.fields.marks)\n\t\t\t\tres = <h6 className=\"text-success ml-4 mt-4 pl-1\">Correct</h6>;\n\t\t\telse if (this.props.question.marks !== 0)\n\t\t\t\tres = <h6 className=\"text-warning ml-4 mt-4 pl-1\">Partially Correct</h6>;\n\t\t\telse res = <h6 className=\"text-danger ml-4 mt-4 pl-1\">Wrong</h6>;\n\t\t}\n\t\treturn res;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div id={styles.questionMain} className=\"p-1 m-1 flex-grow-1 bg-light\">\n\t\t\t\t{this.props.question === undefined || this.props.active === -1 ? (\n\t\t\t\t\t<Initial display=\"none\" />\n\t\t\t\t) : (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<div className=\"d-flex flex-row align-items-top\">\n\t\t\t\t\t\t\t<h2 className={[ 'd-inline mr-0 mr-2', styles.qno ].join(' ')}>\n\t\t\t\t\t\t\t\tQ.{this.props.active + 1}\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t<h5 className={[ 'mt-3 mr-0 pr-0 ml-1', styles.qinfo ].join(' ')}>\n\t\t\t\t\t\t\t\t{this.props.question.fields.text}\n\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t<div className={[ styles.rightpannel, 'ml-auto mr-3 mt-2' ].join(' ')}>\n\t\t\t\t\t\t\t\t<h6>{this.props.question.fields.marks}</h6>\n\t\t\t\t\t\t\t\t<h6>{this.props.question.fields.type}</h6>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<Image />\n\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t{this.props.question.fields.type === 'O' ||\n\t\t\t\t\t\tthis.props.question.fields.type === 'M' ||\n\t\t\t\t\t\tthis.props.question.fields.type === 'ON' ||\n\t\t\t\t\t\tthis.props.question.fields.type === 'MP' ||\n\t\t\t\t\t\tthis.props.question.fields.type === 'MN' ||\n\t\t\t\t\t\tthis.props.question.fields.type === 'MPN' ? (\n\t\t\t\t\t\t\t<Choices type={this.props.question.fields.type} submitted={this.props.submitted} />\n\t\t\t\t\t\t) : this.props.question.fields.type !== 'D' ? (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<label className=\"ml-4 pl-4 mt-4\">Answer:</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName={[ 'ml-4 pl-4 form-control w-50', styles.ansInp ].join(' ')}\n\t\t\t\t\t\t\t\t\tstyle={{ display: 'inline' }}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"answer\"\n\t\t\t\t\t\t\t\t\tvalue={this.props.question.answer}\n\t\t\t\t\t\t\t\t\tonChange={(ev) => this.props.updateAnswer(ev.target.value)}\n\t\t\t\t\t\t\t\t\treadOnly={this.props.submitted}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div className=\"d-flex align-items-strech flex-column pr-4 mr-4 ml-4\">\n\t\t\t\t\t\t\t\t<label className=\"mt-4\">Answer:</label>\n\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\tclassName={[ 'pl-4 form-control mb-4' ].join(' ')}\n\t\t\t\t\t\t\t\t\tstyle={{ display: 'inline' }}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"answer\"\n\t\t\t\t\t\t\t\t\trows=\"8\"\n\t\t\t\t\t\t\t\t\tcols=\"20\"\n\t\t\t\t\t\t\t\t\tvalue={this.props.question.answer}\n\t\t\t\t\t\t\t\t\tonChange={(ev) => this.props.updateAnswer(ev.target.value)}\n\t\t\t\t\t\t\t\t\treadOnly={this.props.submitted}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{this.check()}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"float-right btn btn-info mt-2\"\n\t\t\t\t\t\t\tstyle={{ display: this.props.submitted ? 'none' : 'block' }}\n\t\t\t\t\t\t\tonClick={this.props.mark}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tMark for later\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tactive: state.Test.active,\n\t\tquestion: state.Test.questions[state.Test.active],\n\t\ttest: state.Test\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tupdateAnswer: (ans) => dispatch(updateAnswer(ans)),\n\t\tmark: () => dispatch(markForLater())\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Question);\n","import React, { Component } from 'react';\nimport styles from './css/QuestionsBtns.module.css';\n\nimport { connect } from 'react-redux';\nimport { updateActive } from './../../redux/actions/Test.js';\n\nclass QuestionsBtns extends Component {\n\trender() {\n\t\tlet questions = '';\n\t\t//mapping question buttons from all the available question in redux state\n\t\tquestions = this.props.questions.map((data, index) => {\n\t\t\tlet state = data.state.join('');\n\t\t\tlet cls = '';\n\t\t\tswitch (state) {\n\t\t\t\tcase '100':\n\t\t\t\t\tcls = 'btn-danger'; //if not answered\n\t\t\t\t\tbreak;\n\t\t\t\tcase '010':\n\t\t\t\tcase '110':\n\t\t\t\t\tcls = 'btn-success'; //if answered\n\t\t\t\t\tbreak;\n\t\t\t\tcase '001':\n\t\t\t\tcase '101':\n\t\t\t\t\tcls = 'btn-warning'; //if marked for later\n\t\t\t\t\tbreak;\n\t\t\t\tcase '011':\n\t\t\t\tcase '111':\n\t\t\t\t\tcls = 'btn-info'; //if answered and marked for later\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tcls = 'btn-dark'; //if unvisited\n\t\t\t}\n\t\t\tif (index === this.props.active) cls = 'btn-primary'; //if active\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\tclassName={[ 'btn m-2', styles.btns, cls ].join(' ')}\n\t\t\t\t\tkey={index}\n\t\t\t\t\tonClick={() => this.props.updateActive(index)}\n\t\t\t\t\t//update active questin on change also push to buffer for sending to backend i there is any change se the corrosponding action in redux/action/Top.js\n\t\t\t\t\tactive={index === this.props.active}\n\t\t\t\t>\n\t\t\t\t\t{index + 1}\n\t\t\t\t</button>\n\t\t\t);\n\t\t});\n\t\treturn (\n\t\t\t<div id={styles.qBtnsCont}>\n\t\t\t\t<button\n\t\t\t\t\tclassName={[\n\t\t\t\t\t\t'btn m-2 form-control w-25',\n\t\t\t\t\t\tstyles.btns,\n\t\t\t\t\t\t-1 === this.props.active ? 'btn-primary' : 'btn-dark'\n\t\t\t\t\t].join(' ')}\n\t\t\t\t\tonClick={() => this.props.updateActive(-1)}\n\t\t\t\t\t//update active questin to test data also push to buffer for sending to backend i there is any change se the corrosponding action in redux/action/Top.js\n\t\t\t\t\tactive={-1 === this.props.active}\n\t\t\t\t>\n\t\t\t\t\tTest\n\t\t\t\t</button>{' '}\n\t\t\t\t{questions}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tactive: state.Test.active,\n\t\tquestions: state.Test.questions\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tupdateActive: (index) => dispatch(updateActive(index))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionsBtns);\n","import React, { Component } from 'react';\nimport styles from './css/Main.module.css';\n\nimport { connect } from 'react-redux';\n\nclass Timer extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tstarted: props.startTime ? new Date(props.startTime).getTime() : new Date().getTime(),\n\t\t\tleft: props.duration * 60 * 1000,\n\t\t\tduration: props.duration * 60 * 1000\n\t\t};\n\t}\n\n\trender() {\n\t\tlet passed = new Date().getTime() - this.state.started;\n\t\tlet sec = Math.floor(this.state.left / 1000);\n\t\tlet minutes = Math.floor(sec / 60);\n\t\tsec = sec % 60;\n\t\tif (this.state.left > 0) setTimeout(() => this.setState({ left: this.state.duration - passed }), 1000);\n\t\telse this.props.submit.click();\n\t\treturn (\n\t\t\t<h5 id={styles.timer}>\n\t\t\t\tTime: {minutes} : {sec}\n\t\t\t</h5>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tstartTime: state.Test.startTime\n\t};\n};\n\nexport default connect(mapStateToProps)(Timer);\n","import React, { Component } from 'react';\nimport styles from './css/Sidebar.module.css';\nimport Question from './Question.js';\nimport QuestionsBtns from './QuestionsBtns.js';\nimport Timer from './Timer.js';\n\nimport { connect } from 'react-redux';\nimport { addToDataBuffer } from './../../redux/actions/SocketState.js';\n\n//Side bar or the container of the question buttons also the entry point for the qustion body\nclass Sidebar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\ttimer: '', //For rendering timer component , see component did mount , in component did mount because we neew to pass the reference to teh submit button after its mounted\n\t\t\tbtnSpinner: 'none'\n\t\t};\n\n\t\tthis.submit = null; //reference to submit button\n\t}\n\n\tcomponentDidMount = () => {\n\t\t//Stores time component fot cowndown and rendering in UI\n\t\tif (this.props.testData.duration != -1 && !this.props.submitted)\n\t\t\tthis.setState({ timer: <Timer duration={this.props.testData.duration} submit={this.submit} /> }); //Timer does cowndown for given duation in minutes and automatically submits after the times ends\n\t};\n\n\tsendResult = () => {\n\t\t//Calculate marks and send result\n\t\tthis.setState({ btnSpinner: '' });\n\t\tif (this.props.submitted === 1) {\n\t\t\tthis.props.enter(2);\n\t\t} else {\n\t\t\tlet marks_list = [];\n\t\t\tthis.props.questions.forEach((data, index) => {\n\t\t\t\tlet m = 0;\n\t\t\t\tswitch (data.fields.type) {\n\t\t\t\t\tcase 'F':\n\t\t\t\t\t\tif (data.answer === data.fields.answer) m = data.fields.marks;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'M':\n\t\t\t\t\tcase 'O':\n\t\t\t\t\tcase 'ON':\n\t\t\t\t\tcase 'MN':\n\t\t\t\t\t\tif (data.answer.join('') === data.fields.answer) {\n\t\t\t\t\t\t\tm = data.fields.marks;\n\t\t\t\t\t\t} else if (data.fields.type === 'MN' || data.fields.type === 'ON') m = -1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'MP':\n\t\t\t\t\tcase 'MNP':\n\t\t\t\t\t\tlet ans = data.fields.answer.split('');\n\t\t\t\t\t\tlet res = data.answer.join('');\n\t\t\t\t\t\tlet mk = [ 0, 0, 0 ];\n\t\t\t\t\t\tans.forEach((a, index) => {\n\t\t\t\t\t\t\tif (a === '1') {\n\t\t\t\t\t\t\t\tmk[1] += 1;\n\t\t\t\t\t\t\t\tif (res[index] === '1') mk[0] += 1;\n\t\t\t\t\t\t\t} else if (a !== res[index]) mk[2] = 1;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (mk[2] === 1) m = data.fields.type === 'MNP' ? -1 : 0;\n\t\t\t\t\t\telse m = mk[0] / Math.max(1, mk[1]) * data.fields.marks;\n\t\t\t\t\t\tm.toFixed(2);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tmarks_list = [ ...marks_list, m ];\n\t\t\t});\n\t\t\tlet res = { type: 'submit', marks: marks_list };\n\t\t\tthis.props.addToDataBuffer(JSON.stringify(res));\n\t\t}\n\t\tthis.setState({ btnSpinner: 'none' });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div id={styles.sidebarMain} className=\"p-1 bg-secondary\">\n\t\t\t\t\t<h1 className=\"display-4 bg-info text-light pl-2\" id={styles.sideHead}>\n\t\t\t\t\t\tQuestions\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tid={styles.addBtn}\n\t\t\t\t\t\t\tclassName=\"btn btn-dark\"\n\t\t\t\t\t\t\tref={(el) => (this.submit = el)}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis.sendResult();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{this.props.submitted ? 'Result' : 'Submit'}\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName=\"ml-1 spinner-border spinner-border-sm\"\n\t\t\t\t\t\t\t\tstyle={{ display: this.state.btnSpinner }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</h1>\n\n\t\t\t\t\t{/* Container of all the qustion numbers as buttons to navigate */}\n\t\t\t\t\t<QuestionsBtns />\n\t\t\t\t\t{this.state.timer}\n\t\t\t\t</div>\n\t\t\t\t{/* Container of the Question body */}\n\t\t\t\t<Question submitted={this.props.submitted} />\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tpk: state.Test.pk,\n\t\ttestData: state.Test.fields,\n\t\tquestions: state.Test.questions\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\taddToDataBuffer: (data) => dispatch(addToDataBuffer(data))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\n","import React, { useState } from 'react';\nimport styles from './css/Initial.module.css';\n\nimport { connect } from 'react-redux';\n\nfunction Result(props) {\n\tlet total = 0;\n\tlet marks = 0;\n\tprops.questions.forEach((data, index) => {\n\t\ttotal += data.fields.marks;\n\t\tmarks += data.marks;\n\t});\n\n\treturn (\n\t\t<div id={styles.entry} className=\"p-4 bg-light m-4 text-center\">\n\t\t\t<h1 className=\"display-3\">Results</h1>\n\t\t\t<h1 className=\"display-2\">\n\t\t\t\t{marks}/{total}\n\t\t\t</h1>\n\t\t\t<button className=\"btn btn-primary\" onClick={() => props.enter(3)}>\n\t\t\t\tcheck answers\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tquestions: state.Test.questions,\n\t\ttest: state.Test\n\t};\n};\n\nexport default connect(mapStateToProps)(Result);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction Message(props) {\n\tsetTimeout(() => {\n\t\tlet el = document.getElementById('message');\n\t\tReactDOM.unmountComponentAtNode(el);\n\t\tel.style.display = 'none';\n\t}, 10000);\n\treturn <React.Fragment>{props.message}</React.Fragment>;\n}\n\nexport default Message;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Message from './components/Message.js';\n\nimport store from './redux/Store.js';\nimport { connect } from 'react-redux';\nimport {\n\tsetSocket,\n\tconnected,\n\tdisconnected,\n\tsendingData,\n\tsavedQuestion,\n\tdataBufferShift,\n\tsocketError\n} from './redux/actions/SocketState.js';\nimport { updateTestData, updateTestDataForReconnected, submitted } from './redux/actions/Test.js';\n\nclass SocketManager extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.ws = null;\n\t\tthis.error = 0;\n\t}\n\n\tNewWebSocket = () => {\n\t\tlet key = extractKey();\n\t\tthis.ws = new WebSocket('ws://' + window.hostName + '/ws/material/student-test/' + key + '/');\n\t\t//When the socket wil open tis method will will send the socket to redux ScketState and initilize the backend will the test\n\t\tthis.ws.onopen = () => {\n\t\t\tthis.props.setSocket(this.ws);\n\t\t};\n\t\tthis.ws.onmessage = (ev) => {\n\t\t\tthis.error = 0;\n\t\t\tlet msg = JSON.parse(ev.data);\n\t\t\tswitch (msg.type) {\n\t\t\t\tcase 'connected':\n\t\t\t\t\tthis.props.updateTestData(msg.TestData);\n\t\t\t\t\tthis.props.socketConnected();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'reconnected':\n\t\t\t\t\tthis.props.updateTestDataForReconnected(msg.TestData);\n\t\t\t\t\tthis.props.socketConnected();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'data_received':\n\t\t\t\t\tthis.props.dataBufferShift();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'question_received':\n\t\t\t\t\tthis.props.savedQuestion();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'submitted':\n\t\t\t\t\tthis.props.submitted(JSON.parse(this.props.dataBuffer[0]).marks);\n\t\t\t\t\tthis.props.screen(2);\n\t\t\t\t\tthis.props.dataBufferShift();\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t};\n\t\t// \t\t// if the socket closes thisfunction will to try to reconnect after 5 seconds\n\t\tthis.ws.onclose = (ev) => {\n\t\t\tif (this.error === 0) {\n\t\t\t\tthis.props.disconnected();\n\t\t\t\tsetTimeout(this.NewWebSocket, 5000);\n\t\t\t}\n\t\t};\n\t\t//if there is any error in connection this function will try to reconnect after 15 seconds\n\t\tthis.ws.onerror = (ev) => {\n\t\t\tthis.error += 1;\n\t\t\tif (this.error < 5) {\n\t\t\t\tthis.props.disconnected(); //Socket state to reconecting\n\t\t\t\tsetTimeout(this.NewWebSocket, 5000);\n\t\t\t} else {\n\t\t\t\tthis.props.socketError(); //Error msg for scoket state\n\t\t\t\tthis.error = 1; //To try for connection for 4 time also not 0 otherwise onclose will alsotrigerred and infinite loop will be trigered\n\t\t\t\tif (!navigator.onLine) {\n\t\t\t\t\twindow.ononline = () => {\n\t\t\t\t\t\t//to connect agan if internet is down and it connects again\n\t\t\t\t\t\tthis.props.disconnected();\n\t\t\t\t\t\tthis.NewWebSocket();\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\tcomponentDidMount = () => {\n\t\tthis.NewWebSocket();\n\t};\n\tBufferManager = () => {\n\t\tlet questions = store.getState().Test.questions;\n\t\tif (this.props.isready === 0) return;\n\t\tif (this.props.questionBuffer.length !== 0) {\n\t\t\tconsole.log('found n question buffer');\n\t\t\tlet qstn = questions[this.props.questionBuffer[0]];\n\t\t\tlet [ answer, state ] = [ qstn.answer, qstn.state ];\n\t\t\tlet data = {\n\t\t\t\ttype: 'questionUpdate',\n\t\t\t\tindex: this.props.questionBuffer[0],\n\t\t\t\tpayload: { answer, state }\n\t\t\t};\n\t\t\tdata = JSON.stringify(data);\n\t\t\tthis.props.sendingData();\n\t\t\tthis.ws.send(data);\n\t\t} else if (this.props.dataBuffer.length !== 0) {\n\t\t\tlet data = this.props.dataBuffer[0];\n\t\t\tthis.props.sendingData();\n\t\t\tthis.ws.send(data);\n\t\t}\n\t};\n\trender() {\n\t\tthis.BufferManager();\n\t\tconsole.log('socket : ', this.props.socket);\n\t\treturn <React.Fragment />;\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tsocket: state.SocketState,\n\t\tdataBuffer: state.SocketState.dataBuffer,\n\t\tquestionBuffer: state.SocketState.questionBuffer,\n\t\tisready: state.SocketState.isready,\n\t\tscreen: state.SocketState.screen\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tsetSocket: (ws) => dispatch(setSocket(ws)),\n\t\tsocketConnected: () => dispatch(connected()),\n\t\tupdateTestData: (data) => dispatch(updateTestData(data)),\n\t\tdisconnected: () => dispatch(disconnected()),\n\t\tupdateTestDataForReconnected: (data) => dispatch(updateTestDataForReconnected(data)),\n\t\tsendingData: () => dispatch(sendingData()),\n\t\tsavedQuestion: () => dispatch(savedQuestion()),\n\t\tdataBufferShift: () => dispatch(dataBufferShift()),\n\t\tsocketError: () => dispatch(socketError()),\n\t\tsubmitted: (marks) => dispatch(submitted(marks))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SocketManager);\n\nvar extractKey = () => {\n\t//extracts the pk form the url\n\tlet url = window.location.href;\n\tlet size = url.length;\n\tlet lastindexofSlash = url.lastIndexOf('/');\n\tif (lastindexofSlash === size - 1) {\n\t\turl = url.slice(0, -1);\n\t\tlastindexofSlash = url.lastIndexOf('/');\n\t}\n\treturn url.substring(lastindexofSlash + 1);\n};\n\nexport { extractKey };\n","import React, { Component } from 'react';\nimport styles from './css/Main.module.css';\nimport Sidebar from './Sidebar.js';\nimport Initial from './Initial.js';\nimport Result from './result.js';\nimport { extractKey } from './../../SocketManager.js';\n\nimport { connect } from 'react-redux';\nimport { setScreenFunction } from './../../redux/actions/SocketState.js';\n\n//Entry point for the main body\nclass Main extends Component {\n\t//fetching and saving the test data\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tenter: 0 //Determines what to render to the main body\n\t\t};\n\t\tthis.props.setScreenFunction(this.enter);\n\t}\n\t// fetchData = (key) => {\n\t// \t//fetches all the test data at once\n\t// \tfetch(window.base + '/material/api/test/data/' + key + '/', { credentials: window.cred })\n\t// \t\t.then((Response) => Response.json())\n\t// \t\t.then((data) => this.props.updateTestData(data))\n\t// \t\t.catch((error) => alert('Error fetching data: possible reasons unauthorised access aur connection issue '));\n\t// };\n\n\t//Fetching data after component has been mounted\n\t// componentDidMount = () => {\n\t//extracts key from url and fetchs all the test data at once\n\t// let key = extractKey();\n\t// this.fetchData(key);\n\t// };\n\n\tenter = (val) => {\n\t\t//to change the value of this.state.enter\n\t\tthis.setState({ enter: val });\n\t};\n\n\tscreen = () => {\n\t\tlet res;\n\t\tswitch (this.state.enter) {\n\t\t\tcase 0:\n\t\t\t\tres = <Initial enter={this.enter} display=\"block\" />; //the first screen to apear\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tres = <Sidebar enter={this.enter} submitted={0} />;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tres = <Result enter={this.enter} />;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tres = <Sidebar enter={this.enter} submitted={1} />;\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn res;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tid={styles.main}\n\t\t\t\tclassName={\n\t\t\t\t\tthis.state.enter == 1 ? [ 'p-1 d-flex pt-2', styles.fullScreen ].join(' ') : 'p-1 d-flex pt-2'\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{this.screen()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = null;\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tsetScreenFunction: (func) => dispatch(setScreenFunction(func))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","import React from 'react';\nimport Top from './components/Top/Top.js';\nimport Main from './components/Body/Main.js';\n\nfunction App() {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Top /> <Main />\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Store from './redux/Store.js';\nimport { Provider } from 'react-redux';\nimport SocketManager from './SocketManager.js';\n\nwindow.base = '';\nwindow.hostName = window.location.host;\n// window.media_url = window.base + '/media/';\nwindow.media_url = 'https://eduhub.blob.core.windows.net/eduhub/';\nwindow.cred = 'same-origin';\n\nReactDOM.render(\n\t<Provider store={Store}>\n\t\t<App />\n\t\t<SocketManager />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// var ws = new WebSocket('ws://' + window.host + '/ws/material/testMaker/');\n// export { ws };\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}