{"version":3,"sources":["components/Body/css/Question.module.css","components/Top/css/Top.module.css","components/Body/css/Sidebar.module.css","components/Body/css/QuestionsBtns.module.css","components/Top/css/Notification.module.css","components/Body/css/Main.module.css","components/Top/Nav.js","components/Top/UserBtn.js","components/Top/Notification.js","components/Top/SockerStatus.js","components/Top/Top.js","redux/actions/Profile.js","redux/reducers/Profile.js","redux/reducers/Test.js","redux/reducers/SocketState.js","redux/Store.js","redux/actions/SocketState.js","redux/actions/Test.js","components/Body/Choices.js","components/Body/Image.js","components/Body/Test.js","components/Body/Question.js","components/Body/QuestionsBtns.js","components/Body/Sidebar.js","components/Body/Main.js","App.js","SocketManager.js","index.js","components/Top/css/UserBtn.module.css","components/Top/css/SocketStatus.module.css"],"names":["module","exports","Nav","props","className","id","styles","navCont","href","navLink","join","style","opacity","connect","state","profile","Profile","useState","userPannelVis","changeVis","userBtnCont","userBtn","onClick","ev","onBlur","setTimeout","src","undefined","name","window","media_url","fields","profile_pic","userBtnImg","alt","userPannel","display","Fragment","userData","username","email","userPannelLink","base","Notification","notifBtn","socketStatus","SocketState","status","disp","dot1","dot2","dot3","socketError","navigator","onLine","socketState","dispatch","updateProfile","data","type","payload","useEffect","fetch","credentials","cred","then","response","json","profileData","topBar","edu","location","assign","action","Test","active","questions","changed","pk","parent_test","text","image","marks","answer","jsonChoices","length","index","title","description","access","accessKey","duration","c","JSON","parse","cindex","cdata","stringify","socket","buffer","dataBuffer","isready","shift","Store","createStore","combineReducers","addToDataBuffer","AddingToBuffer","test","store","getState","dict","updateActive","updateAnswer","ans","imageUploaded","Choices","answerHandler","question","split","map","parseInt","choicesCont","checked","this","choicesLabel","choices","value","onChange","updateChoice","target","Component","putSpinner","accept","event","file","files","reader","FileReader","onload","res","result","byteArray","Uint8Array","Array","from","key","readAsArrayBuffer","role","forEach","updateTitle","class","newDuration","for","desc","rows","updateDescription","newAccess","newAccessKey","origin","link","previousSibling","select","setSelectionRange","document","execCommand","time","acc","ak","Question","questionMain","qno","updateActiveQuestionText","placeholder","cols","ansInp","rightpannel","marksinp","min","updateMarks","updateType","ws","val","QuestionsBtns","btns","disabled","qBtnsCont","Sidebar","sidebarMain","sideHead","addBtn","newQuestion","Main","main","App","SocketManager","InitilizeBackend","extractKey","raw_data","test_initilized","send","NewWebSocket","scheme","protocol","WebSocket","hostName","onopen","setSocket","onmessage","msg","updateTestData","testData","socketConnected","error","code","updatePk","saved","dataBufferShift","disconnected","close","onclose","onerror","SocketError","ononline","componentDidMount","BufferManager","sendingData","Object","url","size","lastindexofSlash","lastIndexOf","slice","substring","host","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e48a1ece.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"questionMain\":\"Question_questionMain__1_rxd\",\"rightpannel\":\"Question_rightpannel__2UY0F\",\"marksinp\":\"Question_marksinp__2Uhvn\",\"choicesCont\":\"Question_choicesCont__wBpp9\",\"choices\":\"Question_choices__lz6pm\",\"choicesLabel\":\"Question_choicesLabel__1Ls73\",\"ansInp\":\"Question_ansInp__egB3m\",\"desc\":\"Question_desc__2_tAt\",\"qno\":\"Question_qno__WrjZj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topBar\":\"Top_topBar__1M36g\",\"navLink\":\"Top_navLink__31pSM\",\"edu\":\"Top_edu__3lhuD\",\"navCont\":\"Top_navCont__2D-Nz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebarMain\":\"Sidebar_sidebarMain__3xpJL\",\"sideHead\":\"Sidebar_sideHead__3_rEt\",\"addBtn\":\"Sidebar_addBtn__17vBb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"qBtnsCont\":\"QuestionsBtns_qBtnsCont__r19tx\",\"btns\":\"QuestionsBtns_btns__3JyHc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notifBtn\":\"Notification_notifBtn__U2Qxp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__1oWsp\"};","import React from 'react';\nimport styles from './css/Top.module.css';\n\nfunction Nav(props) {\n\treturn (\n\t\t<div className=\"ml-4 pl-4\" id={styles.navCont}>\n\t\t\t<a href=\"/\" className={[ styles.navLink, 'ml-4 mr-4' ].join(' ')}>\n\t\t\t\tHome\n\t\t\t</a>\n\t\t\t<a href=\"#\" className={[ styles.navLink, 'ml-4 mr-4' ].join(' ')} style={{ opacity: '30%' }}>\n\t\t\t\tBlog\n\t\t\t</a>\n\t\t\t<a href=\"#\" className={[ styles.navLink, 'ml-4 mr-4' ].join(' ')} style={{ opacity: '30%' }}>\n\t\t\t\tContact\n\t\t\t</a>\n\t\t</div>\n\t);\n}\n\nexport default Nav;\n","import React, { useState } from 'react';\nimport styles from './css/UserBtn.module.css';\n\nimport { connect } from 'react-redux';\n\nfunction UserBtn(props) {\n\tconst [ userPannelVis, changeVis ] = useState('none');\n\treturn (\n\t\t<div className=\"ml-2\" id={styles.userBtnCont}>\n\t\t\t<button\n\t\t\t\tclassName=\"p-0\"\n\t\t\t\tid={styles.userBtn}\n\t\t\t\tonClick={(ev) => changeVis(userPannelVis === 'block' ? 'none' : 'block')}\n\t\t\t\tonBlur={(ev) => setTimeout(changeVis, 10, 'none')}\n\t\t\t>\n\t\t\t\t<img\n\t\t\t\t\tsrc={props.profile.name !== undefined ? window.media_url + props.profile.fields.profile_pic : ''}\n\t\t\t\t\tid={styles.userBtnImg}\n\t\t\t\t\talt=\"\"\n\t\t\t\t/>\n\t\t\t</button>\n\t\t\t<div\n\t\t\t\tonClick={(ev) => setTimeout(changeVis, 20, 'block')}\n\t\t\t\tid={styles.userPannel}\n\t\t\t\tclassName=\"p-2 pr-3 bg-white\"\n\t\t\t\tstyle={{ display: userPannelVis }}\n\t\t\t>\n\t\t\t\t{props.profile.name !== undefined ? (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<span className={styles.userData}>{props.profile.username}</span>\n\t\t\t\t\t\t<span className={[ styles.userData, 'text-secondary' ].join(' ')}>{props.profile.email}</span>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\t\t\t\t<hr className=\"m-0 mt-1\" />\n\t\t\t\t<a\n\t\t\t\t\thref=\"#\"\n\t\t\t\t\tclassName={[ styles.navLink, styles.userPannelLink, 'pb-0 mt-2 mb-1 mr-2 ml-1' ].join(' ')}\n\t\t\t\t\tstyle={{ opacity: '30%' }}\n\t\t\t\t>\n\t\t\t\t\tProfile\n\t\t\t\t</a>\n\t\t\t\t<a\n\t\t\t\t\thref={window.base + '/user/logout/'}\n\t\t\t\t\tclassName={[ styles.navLink, styles.userPannelLink, 'pb-0 mb-0 mr-2 ml-1' ].join(' ')}\n\t\t\t\t>\n\t\t\t\t\tLogout\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tprofile: state.Profile\n\t};\n};\n\nexport default connect(mapStateToProps)(UserBtn);\n","import React from 'react';\nimport styles from './css/Notification.module.css';\n\nfunction Notification(props) {\n\treturn (\n\t\t<div className=\"ml-auto mr-4\" style={{ opacity: '30%' }}>\n\t\t\t<button className=\"material-icons  btn\" id={styles.notifBtn}>\n\t\t\t\tnotifications\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport default Notification;\n","import React from 'react';\nimport styles from './css/SocketStatus.module.css';\n\nimport { connect } from 'react-redux';\n\n//Displays the status of socket line conected, saving saved etc.\nfunction SocketStatus(props) {\n\tlet disp = 'default';\n\t//Renders msg according to the state of the socket\n\tswitch (props.socketStatus) {\n\t\tcase 'connecting':\n\t\tcase 'saving':\n\t\tcase 'reconnecting':\n\t\t\tdisp = (\n\t\t\t\t<h6 className=\"text-muted mb-0 pb-0\" id={styles.status}>\n\t\t\t\t\t{props.socketStatus}\n\t\t\t\t\t{/* Blinking dots */}\n\t\t\t\t\t<span id={styles.dot1}>.</span>\n\t\t\t\t\t<span id={styles.dot2}>.</span>\n\t\t\t\t\t<span id={styles.dot3}>.</span>\n\t\t\t\t</h6>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'saved':\n\t\t\tdisp = (\n\t\t\t\t<h6 className=\"text-muted\" id={styles.status}>\n\t\t\t\t\tAll previous changes saved\n\t\t\t\t</h6>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'connected':\n\t\t\tdisp = (\n\t\t\t\t<h6 className=\"text-muted\" id={styles.status}>\n\t\t\t\t\tConnected\n\t\t\t\t</h6>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'error':\n\t\t\tdisp = (\n\t\t\t\t<h6 className={[ 'text-muted', styles.socketError ].join(' ')} id={styles.status}>\n\t\t\t\t\t{navigator.onLine ? ( //when online\n\t\t\t\t\t\t\"Error: Your changes won't be save try refreshing the page and report if error prsists\"\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\"Offline: Your changes won't be saved unless connected\"\n\t\t\t\t\t)}\n\t\t\t\t</h6>\n\t\t\t);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\treturn (\n\t\t<div className=\"ml-4 pb-0 mt-4\" id={styles.socketState}>\n\t\t\t{disp}\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tsocketStatus: state.SocketState.status\n\t};\n};\n\nexport default connect(mapStateToProps)(SocketStatus);\n","import React, { useEffect } from 'react';\nimport styles from './css/Top.module.css';\nimport Nav from './Nav.js';\nimport UserBtn from './UserBtn.js';\nimport Notiification from './Notification.js';\nimport SocketStatus from './SockerStatus.js';\n\nimport { connect } from 'react-redux';\nimport { updateProfile } from './../../redux/actions/Profile.js';\n// Entry point for the top bar\nfunction Top(props) {\n\t//Fetching the user profile data\n\tuseEffect(\n\t\t() => {\n\t\t\tfetch(window.base + '/user/api/profile/', { credentials: window.cred }) //fetching profile data\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then((profileData) => props.updateProfile(profileData));\n\t\t},\n\t\t[ props ]\n\t);\n\treturn (\n\t\t<div id={styles.topBar} className=\"d-flex flex-row align-items-center col-12 pl-2  text-light\">\n\t\t\t<h1 className=\"display-3 ml-2 text-dark\" id={styles.edu} onClick={() => window.location.assign('/')}>\n\t\t\t\t<span>eduHub</span>\n\t\t\t</h1>\n\t\t\t{/* nav will not appear in the mobile view */}\n\t\t\t<Nav />\n\t\t\t<SocketStatus />\n\t\t\t<Notiification />\n\t\t\t<UserBtn />\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = null;\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tupdateProfile: (data) => dispatch(updateProfile(data))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Top);\n","export function updateProfile(data) {\n\treturn {\n\t\ttype: 'updateProfile',\n\t\tpayload: data\n\t};\n}\n","const Profile = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase 'updateProfile':\n\t\t\tstate = { ...action.payload };\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn state;\n};\n\nexport default Profile;\n","import { act } from 'react-dom/test-utils';\n\nconst Test = (state = { active: -1, questions: [], fields: {}, changed: 0 }, action) => {\n\tstate = { ...state };\n\tswitch (action.type) {\n\t\tcase 'updateTestData':\n\t\t\tstate = { ...action.payload };\n\t\t\tbreak;\n\t\tcase 'newQuestion':\n\t\t\tstate.questions = [\n\t\t\t\t...state.questions,\n\t\t\t\t{\n\t\t\t\t\tpk: null,\n\t\t\t\t\tfields: {\n\t\t\t\t\t\tparent_test: state.pk,\n\t\t\t\t\t\ttext: '',\n\t\t\t\t\t\ttype: '',\n\t\t\t\t\t\timage: '',\n\t\t\t\t\t\tmarks: 0,\n\t\t\t\t\t\tanswer: '',\n\t\t\t\t\t\tjsonChoices: ''\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t];\n\t\t\tif (state.active !== -1) {\n\t\t\t\tstate.questions[state.active].changed = 0; //changing changes status of changed for question as it was added to buffer in the action\n\t\t\t} else if (state.active === -1) {\n\t\t\t\tstate.changed = 0; //changing status of changes for test as it was added to buffer in corrosponding action\n\t\t\t}\n\t\t\tstate.active = state.questions.length - 1;\n\t\t\tbreak;\n\t\tcase 'updatePk':\n\t\t\tstate.questions[action.payload.index].pk = action.payload.pk;\n\t\t\tstate.questions[action.payload.index] = { ...state.questions[action.payload.index] };\n\t\t\tbreak;\n\t\tcase 'updateActive':\n\t\t\tif (state.active !== -1) {\n\t\t\t\tstate.questions[state.active].changed = 0; //changing changes status of changed for question as it was added to buffer in the action\n\t\t\t} else if (state.active === -1) {\n\t\t\t\tstate.changed = 0; //changing status of changes for test as it was added to buffer in corrosponding action\n\t\t\t}\n\t\t\tstate.active = action.payload;\n\t\t\tbreak;\n\t\tcase 'updateTestTitle': //Not changing the memory location ({...state}) as it was done initially in the first line same for the next few cases\n\t\t\tstate.fields.title = action.payload;\n\t\t\tstate.changed = 1;\n\t\t\tbreak;\n\t\tcase 'updateTestDescription':\n\t\t\tstate.fields.description = action.payload;\n\t\t\tstate.changed = 1;\n\t\t\tbreak;\n\t\tcase 'updateTestAccess':\n\t\t\tstate.fields.access = action.payload;\n\t\t\tstate.changed = 1;\n\t\t\tbreak;\n\t\tcase 'updateTestAccessKey':\n\t\t\tstate.fields.accessKey = action.payload;\n\t\t\tstate.changed = 1;\n\t\t\tbreak;\n\t\tcase 'updateTestDuration':\n\t\t\tstate.fields.duration = action.payload;\n\t\t\tstate.changed = 1;\n\t\t\tbreak;\n\t\tcase 'updateActiveQuestionText':\n\t\t\tstate.questions[state.active].fields.text = action.payload;\n\t\t\tstate.questions[state.active].changed = 1;\n\t\t\tstate.questions[state.active] = { ...state.questions[state.active] };\n\t\t\tbreak;\n\t\tcase 'updateActiveAnswer':\n\t\t\tstate.questions[state.active].fields.answer = action.payload;\n\t\t\tstate.questions[state.active].changed = 1;\n\t\t\tstate.questions[state.active] = { ...state.questions[state.active] };\n\t\t\tbreak;\n\t\tcase 'updateActiveMarks':\n\t\t\tstate.questions[state.active].fields.marks = action.payload;\n\t\t\tstate.questions[state.active].changed = 1;\n\t\t\tstate.questions[state.active] = { ...state.questions[state.active] };\n\t\t\tbreak;\n\t\tcase 'updateActiveQuestionType':\n\t\t\tstate.questions[state.active].fields.type = action.payload;\n\t\t\tif (\n\t\t\t\taction.payload === 'O' ||\n\t\t\t\taction.payload === 'M' ||\n\t\t\t\taction.payload === 'ON' ||\n\t\t\t\taction.payload === 'MP' ||\n\t\t\t\taction.payload === 'MN' ||\n\t\t\t\taction.payload === 'MPN'\n\t\t\t) {\n\t\t\t\tstate.questions[state.active].fields.answer = '0000';\n\t\t\t} else {\n\t\t\t\tstate.questions[state.active].fields.answer = '';\n\t\t\t}\n\t\t\tstate.questions[state.active].changed = 1;\n\t\t\tstate.questions[state.active] = { ...state.questions[state.active] };\n\t\t\tbreak;\n\t\tcase 'updateActiveChoices':\n\t\t\tlet c = state.questions[state.active].fields.jsonChoices;\n\t\t\tc = c === '' ? [] : JSON.parse(c);\n\t\t\tc[action.payload.cindex - 1] = action.payload.cdata;\n\t\t\tstate.questions[state.active].fields.jsonChoices = JSON.stringify(c);\n\t\t\tstate.questions[state.active].changed = 1;\n\t\t\tstate.questions[state.active] = { ...state.questions[state.active] };\n\t\t\tbreak;\n\t\tcase 'imageUploaded': //Used by socket when image is uploaded ans socket receive teh path of the image\n\t\t\tstate.questions[action.payload.index].fields.image = action.payload.image;\n\t\t\tstate.questions[action.payload.index] = { ...state.questions[action.payload.index] };\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn state;\n};\n\nexport default Test;\n","const SocketState = (\n\tstate = { socket: null, status: 'connecting', buffer: [], dataBuffer: [], isready: 0 },\n\taction\n) => {\n\tstate = { ...state };\n\tswitch (action.type) {\n\t\tcase 'setSocket':\n\t\t\tstate.socket = action.payload;\n\t\t\tbreak;\n\t\tcase 'connected':\n\t\t\tstate.status = 'connected';\n\t\t\tstate.isready = 1;\n\t\t\tbreak;\n\t\tcase 'disconnected':\n\t\t\tstate.status = 'reconnecting';\n\t\t\tstate.isready = 0;\n\t\t\tbreak;\n\t\tcase 'addToBuffer':\n\t\t\tstate.buffer = [ ...state.buffer, action.payload ];\n\t\t\tbreak;\n\t\tcase 'sendingData':\n\t\t\tstate.isready = 0;\n\t\t\tstate.status = 'saving';\n\t\t\tbreak;\n\t\tcase 'savedData':\n\t\t\tstate.buffer.shift();\n\t\t\tstate.buffer = [ ...state.buffer ];\n\t\t\tif (state.buffer.length === 0 && state.dataBuffer.length === 0) state.status = 'saved';\n\t\t\tstate.isready = 1;\n\t\t\tbreak;\n\t\tcase 'dataBufferShift':\n\t\t\tstate.dataBuffer.shift();\n\t\t\tstate.dataBuffer = [ ...state.dataBuffer ];\n\t\t\tstate.isready = 1;\n\t\t\tif (state.buffer.length === 0 && state.dataBuffer.length === 0) state.status = 'saved';\n\t\t\tbreak;\n\t\tcase 'addToDataBuffer':\n\t\t\tstate.dataBuffer = [ ...state.dataBuffer, action.payload ];\n\t\t\tbreak;\n\t\tcase 'SocketError':\n\t\t\tstate.status = 'error';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn state;\n};\n\nexport default SocketState;\n","import { createStore, combineReducers } from 'redux';\nimport Profile from './reducers/Profile.js';\nimport Test from './reducers/Test.js';\nimport SocketState from './reducers/SocketState.js';\n\nconst Store = createStore(combineReducers({ Profile, Test, SocketState }), {});\n\nexport default Store;\n","export function setSocket(ws) {\n\t//initilize the socket to soket state\n\treturn {\n\t\ttype: 'setSocket',\n\t\tpayload: ws\n\t};\n}\n\nexport function addToBuffer(index) {\n\treturn {\n\t\ttype: 'addToBuffer',\n\t\tpayload: index\n\t};\n}\n\nexport function connected() {\n\t//set is ready flag to 1\n\treturn {\n\t\ttype: 'connected',\n\t\tpayload: null\n\t};\n}\n\nexport function sending() {\n\treturn {\n\t\ttype: 'sendingData',\n\t\tpayload: null\n\t};\n}\n\nexport function saved() {\n\t//is ready flag to 1 and  update socket status and shift the buffer array\n\treturn {\n\t\ttype: 'savedData',\n\t\tpayload: null\n\t};\n}\n\nexport function disconnected() {\n\treturn {\n\t\ttype: 'disconnected',\n\t\tpayload: null\n\t};\n}\n\nexport function addToDataBuffer(data) {\n\treturn {\n\t\ttype: 'addToDataBuffer',\n\t\tpayload: data\n\t};\n}\n\nexport function dataBufferShift() {\n\t//is ready flag to 1 and  update socket status and shift the  data buffer\n\treturn {\n\t\ttype: 'dataBufferShift',\n\t\tpayload: null\n\t};\n}\n\nexport function socketError() {\n\treturn {\n\t\ttype: 'SocketError',\n\t\tpayload: null\n\t};\n}\n","import store from './../Store.js';\nimport { addToBuffer, addToDataBuffer } from './SocketState.js'; //addToBuffer has a higher priority over addToDataBuffer\n\nexport function updateTestData(data) {\n\tlet questions = data.questions.map((data) => {\n\t\tdata['changed'] = 0;\n\t\treturn data;\n\t});\n\tdata['questions'] = Object.assign([], questions);\n\tdata['active'] = -1;\n\treturn {\n\t\ttype: 'updateTestData',\n\t\tpayload: data\n\t};\n}\n\nexport function AddingToBuffer() {\n\tlet test = store.getState().Test;\n\tif (test.active !== -1)\n\t\tif (test.questions[test.active].changed === 1) {\n\t\t\tstore.dispatch(addToBuffer(test.active)); //Add to buffer adds index of the changes question and does the preprocessing just before sending\n\t\t\treturn;\n\t\t}\n\t//Push the index of the last active question to the buffer of Socket State if there is any change\n\tif (test.active === -1 && test.changed === 1) {\n\t\tlet dict = { type: 'testUpdate', payload: test.fields }; //organizing data as it is to be sent to the backend through socket\n\t\tdict = JSON.stringify(dict);\n\t\tstore.dispatch(addToDataBuffer(dict)); //addToDataBuffer sends data to backend through socket as it is\n\t}\n}\n\nexport function newQuestion() {\n\tAddingToBuffer();\n\treturn {\n\t\ttype: 'newQuestion'\n\t};\n}\n\nexport function updatePk(index, pk) {\n\t//used by socket manager  when new question is saved to backend ans socket receives its pk\n\treturn {\n\t\ttype: 'updatePk',\n\t\tpayload: { index, pk }\n\t};\n}\n\nexport function updateActive(index) {\n\tAddingToBuffer();\n\treturn {\n\t\ttype: 'updateActive',\n\t\tpayload: index\n\t};\n}\n\nexport function updateActiveQuestionText(text) {\n\treturn {\n\t\ttype: 'updateActiveQuestionText',\n\t\tpayload: text\n\t};\n}\n\nexport function updateAnswer(ans) {\n\treturn {\n\t\ttype: 'updateActiveAnswer',\n\t\tpayload: ans\n\t};\n}\n\nexport function updateMarks(marks) {\n\treturn {\n\t\ttype: 'updateActiveMarks',\n\t\tpayload: marks\n\t};\n}\n\nexport function updateType(val) {\n\treturn {\n\t\ttype: 'updateActiveQuestionType',\n\t\tpayload: val\n\t};\n}\n\nexport function updateChoice(cindex, cdata) {\n\treturn {\n\t\ttype: 'updateActiveChoices',\n\t\tpayload: { cindex, cdata }\n\t};\n}\n\nexport function imageUploaded(index, image) {\n\treturn {\n\t\ttype: 'imageUploaded',\n\t\tpayload: { index, image }\n\t};\n}\n\nexport function updateTitle(data) {\n\treturn {\n\t\ttype: 'updateTestTitle',\n\t\tpayload: data\n\t};\n}\n\nexport function updateDescription(data) {\n\treturn {\n\t\ttype: 'updateTestDescription',\n\t\tpayload: data\n\t};\n}\n\nexport function updateTestAccess(data) {\n\treturn {\n\t\ttype: 'updateTestAccess',\n\t\tpayload: data\n\t};\n}\nexport function updateTestAccessKey(data) {\n\treturn {\n\t\ttype: 'updateTestAccessKey',\n\t\tpayload: data\n\t};\n}\nexport function updateTestDuration(data) {\n\treturn {\n\t\ttype: 'updateTestDuration',\n\t\tpayload: data\n\t};\n}\n","import React, { Component } from 'react';\nimport styles from './css/Question.module.css';\n\nimport { connect } from 'react-redux';\nimport { updateChoice } from './../../redux/actions/Test.js';\nimport { updateAnswer } from './../../redux/actions/Test.js';\n\nclass Choices extends Component {\n\tanswerHandler = (ev, index) => {\n\t\tlet ans = this.props.question.fields.answer;\n\t\tans = ans.split('');\n\t\tans = ans.map((data) => parseInt(data));\n\t\tif (this.props.question.fields.type[0] === 'O') {\n\t\t\tans = [ 0, 0, 0, 0 ];\n\t\t\tans[index - 1] = 1;\n\t\t} else {\n\t\t\tans[index - 1] = (ans[index - 1] + 1) % 2;\n\t\t}\n\t\tthis.props.updateAnswer(ans.join(''));\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className={[ 'p-0 d-flex w-100', styles.choicesCont ].join(' ')}>\n\t\t\t\t\t<div className={[ 'p-0 d-flex w-100 align-items-baseline', styles.choicesCont ].join(' ')}>\n\t\t\t\t\t\t<div className=\"d-flex flex-row align-items-baseline ml-4\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tonClick={(ev) => this.answerHandler(ev, 1)}\n\t\t\t\t\t\t\t\tchecked={this.props.question.fields.answer[0] === '1'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label className={[ 'ml-1', styles.choicesLabel ].join(' ')}>Choice 1:</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName={[ 'form-control m-4', styles.choices ].join(' ')}\n\t\t\t\t\t\t\tvalue={this.props.choices[0] !== undefined ? this.props.choices[0] : ''}\n\t\t\t\t\t\t\tonChange={(ev) => this.props.updateChoice(1, ev.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={[ 'p-0 d-flex w-100 align-items-baseline', styles.choicesCont ].join(' ')}>\n\t\t\t\t\t\t<div className=\"d-flex flex-row align-items-baseline ml-4\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tonClick={(ev) => this.answerHandler(ev, 2)}\n\t\t\t\t\t\t\t\tchecked={this.props.question.fields.answer[1] === '1'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label className={[ 'ml-1', styles.choicesLabel ].join(' ')}>Choice 2:</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName={[ 'm-4 form-control', styles.choices ].join(' ')}\n\t\t\t\t\t\t\tvalue={this.props.choices[1] !== undefined ? this.props.choices[1] : ''}\n\t\t\t\t\t\t\tonChange={(ev) => this.props.updateChoice(2, ev.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={[ 'p-0 d-flex w-100', styles.choicesCont ].join(' ')}>\n\t\t\t\t\t<div className={[ 'p-0 d-flex w-100 align-items-baseline', styles.choicesCont ].join(' ')}>\n\t\t\t\t\t\t<div className=\"d-flex flex-row align-items-baseline ml-4\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tonClick={(ev) => this.answerHandler(ev, 3)}\n\t\t\t\t\t\t\t\tchecked={this.props.question.fields.answer[2] === '1'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label className={[ 'ml-1', styles.choicesLabel ].join(' ')}>Choice 3:</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName={[ 'form-control m-4', styles.choices ].join(' ')}\n\t\t\t\t\t\t\tvalue={this.props.choices[2] !== undefined ? this.props.choices[2] : ''}\n\t\t\t\t\t\t\tonChange={(ev) => this.props.updateChoice(3, ev.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={[ 'p-0 d-flex w-100 align-items-baseline', styles.choicesCont ].join(' ')}>\n\t\t\t\t\t\t<div className=\"d-flex flex-row align-items-baseline ml-4\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tonClick={(ev) => this.answerHandler(ev, 4)}\n\t\t\t\t\t\t\t\tchecked={this.props.question.fields.answer[3] === '1'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label className={[ 'ml-1', styles.choicesLabel ].join(' ')}>Choice 4:</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName={[ 'form-control m-4', styles.choices ].join(' ')}\n\t\t\t\t\t\t\tvalue={this.props.choices[3] !== undefined ? this.props.choices[3] : ''}\n\t\t\t\t\t\t\tonChange={(ev) => this.props.updateChoice(4, ev.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<span className=\"text-muted ml-4\">Sellect correct answer/answers.</span>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tactive: state.Test.active,\n\t\tchoices:\n\t\t\tstate.Test.questions[state.Test.active].fields.jsonChoices !== ''\n\t\t\t\t? JSON.parse(state.Test.questions[state.Test.active].fields.jsonChoices)\n\t\t\t\t: [],\n\t\tquestion: state.Test.questions[state.Test.active]\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tupdateChoice: (cindex, cdata) => dispatch(updateChoice(cindex, cdata)),\n\t\tupdateAnswer: (ans) => dispatch(updateAnswer(ans))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Choices);\n","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { addToDataBuffer } from './../../redux/actions/SocketState.js';\nimport { imageUploaded } from './../../redux/actions/Test.js';\n\nfunction Image(props) {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<input\n\t\t\t\tclassName=\"ml-4 pl-4 mt-4\"\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\"image/*\"\n\t\t\t\tname=\"image\"\n\t\t\t\tonChange={(event) => {\n\t\t\t\t\tlet file = event.target.files[0];\n\t\t\t\t\tlet reader = new FileReader();\n\n\t\t\t\t\treader.onload = (event) => {\n\t\t\t\t\t\t//needs more optomised preprocessing for sending over sockets\n\t\t\t\t\t\tlet res = event.target.result;\n\t\t\t\t\t\tvar byteArray = new Uint8Array(res);\n\t\t\t\t\t\tlet data = Array.from(byteArray);\n\t\t\t\t\t\tlet dict = {\n\t\t\t\t\t\t\t//Format for sending data to backend\n\t\t\t\t\t\t\ttype: 'imageUpload',\n\t\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\t\tkey: props.question.pk,\n\t\t\t\t\t\t\t\tname: file.name,\n\t\t\t\t\t\t\t\timage: data,\n\t\t\t\t\t\t\t\tindex: props.active\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tdict = JSON.stringify(dict);\n\t\t\t\t\t\tprops.addToDataBuffer(dict);\n\t\t\t\t\t\tprops.putSpinner(props.active);\n\t\t\t\t\t};\n\t\t\t\t\treader.readAsArrayBuffer(file); //Preprocessing image by converting it to array for sendingit bya socket\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div\n\t\t\t\tclassName={props.question.fields.image}\n\t\t\t\trole=\"status\"\n\t\t\t\tstyle={{ display: props.question.fields.image === 'spinner-border' ? '' : 'none' }}\n\t\t\t/>\n\t\t\t<img\n\t\t\t\tclassName={[ 'm-2 ml-4 pl-4 w-50' ].join(' ')}\n\t\t\t\talt=\"not found\"\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay:\n\t\t\t\t\t\tprops.question.fields.image === '' || props.question.fields.image === 'spinner-border'\n\t\t\t\t\t\t\t? 'none'\n\t\t\t\t\t\t\t: 'inline-block'\n\t\t\t\t}}\n\t\t\t\tsrc={\n\t\t\t\t\tprops.question.fields.image === '' || props.question.fields.image === 'spinner-border' ? (\n\t\t\t\t\t\t'#'\n\t\t\t\t\t) : (\n\t\t\t\t\t\twindow.media_url + props.question.fields.image\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t/>\n\t\t</React.Fragment>\n\t);\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tactive: state.Test.active,\n\t\tquestion: state.Test.questions[state.Test.active]\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\taddToDataBuffer: (data) => dispatch(addToDataBuffer(data)),\n\t\tputSpinner: (index) => dispatch(imageUploaded(index, 'spinner-border'))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Image);\n","import React, { Component } from 'react';\nimport styles from './css/Question.module.css';\n\nimport { connect } from 'react-redux';\nimport {\n\tupdateTitle,\n\tupdateDescription,\n\tupdateTestAccess,\n\tupdateTestDuration,\n\tupdateTestAccessKey\n} from './../../redux/actions/Test.js';\n\nclass Test extends Component {\n\trender() {\n\t\tlet marks = 0;\n\t\tthis.props.questions.forEach((data) => {\n\t\t\tmarks += data.fields.marks;\n\t\t});\n\t\treturn (\n\t\t\t<div className=\"p-4\">\n\t\t\t\t<label>Test Title:</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"form-control \"\n\t\t\t\t\tvalue={this.props.test.fields.title}\n\t\t\t\t\tonChange={(event) => this.props.updateTitle(event.target.value)}\n\t\t\t\t/>\n\t\t\t\t<div class=\"custom-control custom-switch mt-2 d-flex flex-row align-items-center\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tclass=\"custom-control-input\"\n\t\t\t\t\t\tid=\"switch\"\n\t\t\t\t\t\tchecked={this.props.test.fields.duration !== -1}\n\t\t\t\t\t\tonChange={(ev) =>\n\t\t\t\t\t\t\tthis.props.test.fields.duration !== -1\n\t\t\t\t\t\t\t\t? this.props.newDuration(-1)\n\t\t\t\t\t\t\t\t: this.props.newDuration(10)}\n\t\t\t\t\t/>\n\t\t\t\t\t<label class=\"custom-control-label\" for=\"switch\">\n\t\t\t\t\t\tDuration(minutes):\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tclassName=\"form-control w-25 d-inline ml-2\"\n\t\t\t\t\t\tvalue={this.props.test.fields.duration === -1 ? '' : this.props.test.fields.duration}\n\t\t\t\t\t\tonChange={(ev) =>\n\t\t\t\t\t\t\tthis.props.newDuration(ev.target.value == '' ? -1 : parseInt(ev.target.value))}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<label className=\"mt-3\">Description:</label>\n\t\t\t\t<textarea\n\t\t\t\t\tclassName=\"form-control mb-4\"\n\t\t\t\t\tid={styles.desc}\n\t\t\t\t\trows=\"15\"\n\t\t\t\t\tvalue={this.props.test.fields.description}\n\t\t\t\t\tonChange={(event) => this.props.updateDescription(event.target.value)}\n\t\t\t\t/>\n\t\t\t\t<div class=\"custom-control custom-switch mt-2 d-flex flex-row align-items-center\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tclass=\"custom-control-input\"\n\t\t\t\t\t\tid=\"switch2\"\n\t\t\t\t\t\tchecked={this.props.test.fields.access === 1}\n\t\t\t\t\t\tonClick={(ev) => this.props.newAccess((this.props.test.fields.access + 1) % 2)} //Change the access b/w 0 and 1\n\t\t\t\t\t/>\n\t\t\t\t\t<label class=\"custom-control-label\" for=\"switch2\">\n\t\t\t\t\t\tprivate\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ display: this.props.test.fields.access === 1 ? 'block' : 'none' }}>\n\t\t\t\t\t<label styles={{ display: 'block' }}>Access Key:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"form-control w-25 d-inline ml-2\"\n\t\t\t\t\t\tvalue={this.props.test.fields.accessKey}\n\t\t\t\t\t\tonChange={(ev) => this.props.newAccessKey(ev.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"mt-4\">\n\t\t\t\t\t<label>Link:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"ml-2 form-control w-50 d-inline\"\n\t\t\t\t\t\tvalue={window.location.origin + '/material/student-test/' + this.props.test.pk}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* {window.location.origin + '/material/student-test/' + this.props.test.pk} */}\n\t\t\t\t\t</input>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"material-icons ml-2 p-0 btn btn-light\"\n\t\t\t\t\t\tonClick={(ev) => {\n\t\t\t\t\t\t\tlet link = ev.target.previousSibling; //Any sigling tag just before this tag in this case input\n\t\t\t\t\t\t\tlink.select();\n\t\t\t\t\t\t\tlink.setSelectionRange(0, 99999);\n\t\t\t\t\t\t\tdocument.execCommand('copy'); //Copying link\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tfile_copy\n\t\t\t\t\t</button>\n\t\t\t\t\t<label className=\"d-block\">Share this link with the students</label>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"float-right mt-2\">\n\t\t\t\t\t<label>No. of Questions: {this.props.questions.length}</label>\n\t\t\t\t\t<br />\n\t\t\t\t\t<label>Marks: {marks}</label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\ttest: state.Test,\n\t\tquestions: state.Test.questions\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tupdateTitle: (data) => dispatch(updateTitle(data)),\n\t\tupdateDescription: (data) => dispatch(updateDescription(data)),\n\t\tnewDuration: (time) => dispatch(updateTestDuration(time)),\n\t\tnewAccess: (acc) => dispatch(updateTestAccess(acc)),\n\t\tnewAccessKey: (ak) => dispatch(updateTestAccessKey(ak))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Test);\n","import React, { Component } from 'react';\nimport styles from './css/Question.module.css';\nimport Choices from './Choices.js';\nimport Image from './Image.js';\nimport Test from './Test.js';\n\nimport { connect } from 'react-redux';\nimport { updateActiveQuestionText, updateAnswer, updateMarks, updateType } from './../../redux/actions/Test.js';\n\nclass Question extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div id={styles.questionMain} className=\"p-1 ml-2 flex-fill mr-1 bg-light pr-4\">\n\t\t\t\t{this.props.question === undefined || this.props.active === -1 ? (\n\t\t\t\t\t<Test />\n\t\t\t\t) : (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<div className=\"d-flex flex-row\">\n\t\t\t\t\t\t\t<h1 className={[ 'ml-2 mt-4 mr-2', styles.qno ].join(' ')}>Q.{this.props.active + 1}</h1>\n\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\tclassName=\"mt-4 form-control\"\n\t\t\t\t\t\t\t\tvalue={this.props.question.fields.text}\n\t\t\t\t\t\t\t\tonChange={(ev) => this.props.updateActiveQuestionText(ev.target.value)}\n\t\t\t\t\t\t\t\tplaceholder=\"Write your question text here\"\n\t\t\t\t\t\t\t\tcols=\"80\"\n\t\t\t\t\t\t\t\trows=\"6\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<Image />\n\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t{this.props.question.fields.type === 'O' ||\n\t\t\t\t\t\tthis.props.question.fields.type === 'M' ||\n\t\t\t\t\t\tthis.props.question.fields.type === 'ON' ||\n\t\t\t\t\t\tthis.props.question.fields.type === 'MP' ||\n\t\t\t\t\t\tthis.props.question.fields.type === 'MN' ||\n\t\t\t\t\t\tthis.props.question.fields.type === 'MPN' ? (\n\t\t\t\t\t\t\t<Choices /> //Fout choices and handling updating answer of the question\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{this.props.question.fields.type == 'F' ? (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<label className=\"ml-4 pl-4 mt-4\">Answer:</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName={[ 'ml-4 pl-4 form-control', styles.ansInp ].join(' ')}\n\t\t\t\t\t\t\t\t\tstyle={{ display: 'inline' }}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"answer\"\n\t\t\t\t\t\t\t\t\tvalue={this.props.question.fields.answer}\n\t\t\t\t\t\t\t\t\tonChange={(ev) => this.props.updateAnswer(ev.target.value)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<div className={[ styles.rightpannel, 'p-2 mt-4 pr-4' ].join(' ')}>\n\t\t\t\t\t\t\t<label>Marks:</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName={[ 'form-control ml-4', styles.marksinp ].join(' ')}\n\t\t\t\t\t\t\t\tvalue={this.props.question.fields.marks}\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\t\tonChange={(ev) =>\n\t\t\t\t\t\t\t\t\tthis.props.updateMarks(parseInt(ev.target.value === '' ? 0 : ev.target.value))}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<label className=\"mt-4\">Question Type:</label>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tvalue={this.props.question.fields.type}\n\t\t\t\t\t\t\t\tonChange={(ev) => this.props.updateType(ev.target.value)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value=\"\">---------</option>\n\t\t\t\t\t\t\t\t<option value=\"D\">Descriptive</option>\n\t\t\t\t\t\t\t\t<option value=\"F\">Fill</option>\n\t\t\t\t\t\t\t\t<option value=\"O\">One Option Correct</option>\n\t\t\t\t\t\t\t\t<option value=\"ON\">One Option Correct(Negative Marking)</option>\n\t\t\t\t\t\t\t\t<option value=\"M\">Multu Option Correct</option>\n\t\t\t\t\t\t\t\t<option value=\"MP\">Multu Option Correct(Partially correct)</option>\n\t\t\t\t\t\t\t\t<option value=\"MN\">Multu Option Correct(Negative Marking)</option>\n\t\t\t\t\t\t\t\t<option value=\"MPN\">Multu Option Correct(Patrially correct and Neative marking)</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tws: state.SocketState.socket,\n\t\tactive: state.Test.active,\n\t\tquestion: state.Test.questions[state.Test.active],\n\t\ttest: state.Test\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tupdateActiveQuestionText: (text) => dispatch(updateActiveQuestionText(text)),\n\t\tupdateAnswer: (ans) => dispatch(updateAnswer(ans)),\n\t\tupdateMarks: (marks) => dispatch(updateMarks(marks)),\n\t\tupdateType: (val) => dispatch(updateType(val))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Question);\n","import React, { Component } from 'react';\nimport styles from './css/QuestionsBtns.module.css';\n\nimport { connect } from 'react-redux';\nimport { updateActive } from './../../redux/actions/Test.js';\n\nclass QuestionsBtns extends Component {\n\trender() {\n\t\tlet questions = '';\n\t\t//mapping question buttons from all the available question in redux state\n\t\tquestions = this.props.questions.map((data, index) => {\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\tclassName={[ 'btn btn-dark m-2', styles.btns ].join(' ')}\n\t\t\t\t\tkey={index}\n\t\t\t\t\tonClick={() => this.props.updateActive(index)}\n\t\t\t\t\t//update active questin on change also push to buffer for sending to backend i there is any change se the corrosponding action in redux/action/Top.js\n\t\t\t\t\tdisabled={index === this.props.active} //Disabled so that user cannotdo multiple cicks on same button\n\t\t\t\t>\n\t\t\t\t\t{index + 1}\n\t\t\t\t</button>\n\t\t\t);\n\t\t});\n\t\treturn (\n\t\t\t<div id={styles.qBtnsCont}>\n\t\t\t\t<button\n\t\t\t\t\tclassName={[ 'btn btn-dark m-2 form-control w-25', styles.btns ].join(' ')}\n\t\t\t\t\tonClick={() => this.props.updateActive(-1)}\n\t\t\t\t\t//update active questin to test data also push to buffer for sending to backend i there is any change se the corrosponding action in redux/action/Top.js\n\t\t\t\t\tdisabled={-1 === this.props.active}\n\t\t\t\t>\n\t\t\t\t\tTest\n\t\t\t\t</button>\n\t\t\t\t{questions}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tactive: state.Test.active,\n\t\tquestions: state.Test.questions\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tupdateActive: (index) => dispatch(updateActive(index))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionsBtns);\n","import React, { Component } from 'react';\nimport styles from './css/Sidebar.module.css';\nimport Question from './Question.js';\nimport QuestionsBtns from './QuestionsBtns.js';\n\nimport { connect } from 'react-redux';\nimport { newQuestion } from './../../redux/actions/Test.js';\n\n//Side bar or the container of the question buttons also the entry point for the qustion body\nclass Sidebar extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div id={styles.sidebarMain} className=\"p-1 bg-secondary\">\n\t\t\t\t\t<h1 className=\"display-4 bg-info text-light pl-2\" id={styles.sideHead}>\n\t\t\t\t\t\tQuestions\n\t\t\t\t\t\t<button //to add a new question\n\t\t\t\t\t\t\tclassName=\"material-icons p-0 btn btn-primary\"\n\t\t\t\t\t\t\tid={styles.addBtn}\n\t\t\t\t\t\t\tonClick={this.props.newQuestion}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tadd\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</h1>\n\t\t\t\t\t{/* Container of all the qustion numbers as buttons to navigate */}\n\n\t\t\t\t\t<QuestionsBtns />\n\t\t\t\t</div>\n\t\t\t\t{/* Container of the Question body */}\n\t\t\t\t<Question />\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = null;\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tnewQuestion: (event) => dispatch(newQuestion()) //Adds a new question to the reduxt state\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\n","import React from 'react';\nimport styles from './css/Main.module.css';\nimport Sidebar from './Sidebar.js';\n\n//Entry point for the main body\nfunction Main(props) {\n\treturn (\n\t\t<div id={styles.main} className=\"p-1 d-flex pt-2\">\n\t\t\t<Sidebar />\n\t\t</div>\n\t);\n}\n\nexport default Main;\n","import React from 'react';\nimport Top from './components/Top/Top.js';\nimport Main from './components/Body/Main.js';\n\nfunction App() {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Top /> <Main />\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n","import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\n// import Message from './components/Message.js';\n\nimport store from './redux/Store.js';\nimport { connect } from 'react-redux';\nimport { updateTestData, imageUploaded, updateActive, updatePk } from './redux/actions/Test.js';\nimport {\n\tsetSocket,\n\tconnected,\n\tsending,\n\tsaved,\n\tdisconnected,\n\tdataBufferShift,\n\tsocketError\n} from './redux/actions/SocketState.js';\n\nclass SocketManager extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.error = 0;\n\t\tthis.ws = null;\n\t\tthis.test_initilized = 0;\n\t}\n\n\tInitilizeBackend = () => {\n\t\t// initilizing backend for test\n\t\tlet key = extractKey(); //getting pk of test\n\t\tkey = parseInt(key);\n\t\tlet raw_data = { type: 'initilization', payload: { key: key, test_initilized: this.test_initilized } }; //formatting according to backend\n\t\tthis.ws.send(JSON.stringify(raw_data));\n\t};\n\n\tNewWebSocket = () => {\n\t\tlet p = window.location.protocol;\n\t\tlet scheme = 'wss://';\n\t\tif (p == 'http:') scheme = 'ws://'; // adjusting for ws and wss\n\n\t\tthis.ws = new WebSocket(scheme + window.hostName + '/ws/material/testMaker/');\n\n\t\t//When the socket wil open tis method will will send the socket to redux ScketState and initilize the backend will the test\n\t\tthis.ws.onopen = () => {\n\t\t\tthis.props.setSocket(this.ws);\n\t\t\tthis.InitilizeBackend(); //initilizing backend for the test\n\t\t};\n\n\t\tthis.ws.onmessage = (ev) => {\n\t\t\tlet msg = JSON.parse(ev.data); // received data as json string so parse\n\t\t\tswitch (msg.type) {\n\t\t\t\tcase 'connected':\n\t\t\t\t\tif (this.test_initilized === 0) this.props.updateTestData(msg.testData);\n\t\t\t\t\tthis.props.socketConnected(); // setting is ready flag of socket state to 1\n\t\t\t\t\tthis.test_initilized = 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'saved': // saved question\n\t\t\t\t\tthis.error = 0;\n\t\t\t\t\tif ((msg.code = 'SNQ')) {\n\t\t\t\t\t\t//if saved question was new question\n\t\t\t\t\t\tlet socketState = store.getState().SocketState;\n\t\t\t\t\t\tlet index = socketState.buffer[0]; //index of the last send question data\n\t\t\t\t\t\tstore.dispatch(updatePk(index, msg.key)); // updating pk of new question after saving to backend\n\t\t\t\t\t}\n\t\t\t\t\tthis.props.saved(); //shifting buffer and setting is ready flag to 1 for next data transfer\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'imageUploaded':\n\t\t\t\t\tthis.error = 0;\n\t\t\t\t\tthis.props.imageUploaded(msg.index, msg.image); // setting image in test.question after saved in backend\n\t\t\t\t\tthis.props.dataBufferShift();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'dataUploaded':\n\t\t\t\t\tthis.error = 0;\n\t\t\t\t\tthis.props.dataBufferShift(); //shifting the data buffer array and setting the is ready flag to 1\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'error':\n\t\t\t\t\tswitch (msg.code) {\n\t\t\t\t\t\tcase 'NI': // not initilized error thus initilize again\n\t\t\t\t\t\t\tthis.props.disconnected();\n\t\t\t\t\t\t\tthis.InitilizeBackend();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthis.props.disconnected();\n\t\t\t\t\t\t\tthis.ws.close();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t};\n\n\t\t// if the socket closes thisfunction will to try to reconnect after 5 seconds\n\t\tthis.ws.onclose = (ev) => {\n\t\t\tif (this.error === 0) {\n\t\t\t\tthis.props.disconnected();\n\t\t\t\tsetTimeout(this.NewWebSocket, 5000);\n\t\t\t}\n\t\t};\n\n\t\t//if there is any error in connection this function will try to reconnect after 15 seconds\n\t\tthis.ws.onerror = (ev) => {\n\t\t\tthis.error += 1;\n\t\t\tif (this.error < 5) {\n\t\t\t\tthis.props.disconnected(); //Socket state to reconecting\n\t\t\t\tsetTimeout(this.NewWebSocket, 5000);\n\t\t\t} else {\n\t\t\t\tthis.props.SocketError(); //Error msg for scoket state\n\t\t\t\tthis.error = 1; //To try for connection for 4 time also not 0 otherwise onclose will alsotrigerred and infinite loop will be trigered\n\t\t\t\tif (!navigator.onLine) {\n\t\t\t\t\twindow.ononline = () => {\n\t\t\t\t\t\t//to connect agan if internet is down and it connects again\n\t\t\t\t\t\tthis.props.disconnected();\n\t\t\t\t\t\tthis.NewWebSocket();\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\n\tcomponentDidMount = () => {\n\t\tthis.NewWebSocket(); //creating new websocket and setting the socket parameters on the component mounts\n\t};\n\n\tBufferManager = () => {\n\t\tif (this.props.isready === 0) return;\n\t\tlet questions = store.getState().Test.questions;\n\t\tif (this.props.buffer.length !== 0) {\n\t\t\tlet qstn = questions[this.props.buffer[0]];\n\t\t\tlet data = {\n\t\t\t\ttype: 'questionUpdate',\n\t\t\t\tpayload: qstn\n\t\t\t};\n\t\t\tdata = JSON.stringify(data);\n\t\t\tthis.props.sendingData(); //setting the socket status to saving and is ready flag to 0\n\t\t\tthis.ws.send(data);\n\t\t\treturn;\n\t\t} else if (this.props.dataBuffer.length !== 0) {\n\t\t\tlet data = this.props.dataBuffer[0];\n\t\t\tthis.props.sendingData(); //setting the socket status to saving and is ready flag to 0\n\t\t\tthis.ws.send(data);\n\t\t}\n\t};\n\n\trender() {\n\t\tthis.BufferManager();\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"float-right mr-4 mb-4 mt-1 btn btn-success\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.props.updateActive(this.props.active); //To add data to buffer\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tsave\n\t\t\t\t</button>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tactive: state.Test.active,\n\t\tdataBuffer: state.SocketState.dataBuffer,\n\t\tbuffer: state.SocketState.buffer,\n\t\tisready: state.SocketState.isready\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tupdateTestData: (data) => dispatch(updateTestData(data)), //to store the test data received from backend\n\t\tsetSocket: (ws) => dispatch(setSocket(ws)),\n\t\tsocketConnected: () => dispatch(connected()),\n\t\tsendingData: () => dispatch(sending()),\n\t\tsaved: () => dispatch(saved()),\n\t\timageUploaded: (index, image) => dispatch(imageUploaded(index, image)),\n\t\tdataBufferShift: () => dispatch(dataBufferShift()),\n\t\tdisconnected: () => dispatch(disconnected()),\n\t\tupdateActive: (index) => dispatch(updateActive(index)),\n\t\tSocketError: () => dispatch(socketError())\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SocketManager);\n\nvar extractKey = () => {\n\t//extracts the pk form the url\n\tlet url = window.location.href;\n\tlet size = url.length;\n\tlet lastindexofSlash = url.lastIndexOf('/');\n\tif (lastindexofSlash === size - 1) {\n\t\turl = url.slice(0, -1);\n\t\tlastindexofSlash = url.lastIndexOf('/');\n\t}\n\treturn url.substring(lastindexofSlash + 1);\n};\n\nexport { extractKey };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Store from './redux/Store.js';\nimport { Provider } from 'react-redux';\nimport SocketManager from './SocketManager.js';\n\nwindow.base = '';\nwindow.hostName = window.location.host; //For web socket connection\n// window.media_url = window.base + '/media/';\nwindow.media_url = 'https://eduhub.blob.core.windows.net/eduhub/'; //For production\nwindow.cred = 'same-origin'; //change to same-origin for production\n\nReactDOM.render(\n\t<Provider store={Store}>\n\t\t<App />\n\t\t<SocketManager />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n// var ws = new WebSocket('ws://' + window.host + '/ws/material/testMaker/');\n// export { ws };\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"UserBtn_navLink__3C6qU\",\"userBtn\":\"UserBtn_userBtn__2502Q\",\"userBtnImg\":\"UserBtn_userBtnImg__1XDNf\",\"userPannel\":\"UserBtn_userPannel__SYTvw\",\"userPannelLink\":\"UserBtn_userPannelLink__squgZ\",\"userData\":\"UserBtn_userData__ZFyrl\",\"userBtnCont\":\"UserBtn_userBtnCont__1BfAU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dot1\":\"SocketStatus_dot1__2gVtp\",\"dot1Anim\":\"SocketStatus_dot1Anim__2GG5M\",\"dot2\":\"SocketStatus_dot2__2ZiMM\",\"dot2Anim\":\"SocketStatus_dot2Anim__2b30V\",\"dot3\":\"SocketStatus_dot3__2aMyN\",\"dot3Anim\":\"SocketStatus_dot3Anim__3SIAx\",\"socketError\":\"SocketStatus_socketError__3ghxy\",\"status\":\"SocketStatus_status__LHVNz\",\"socketState\":\"SocketStatus_socketState__1gH2c\"};"],"sourceRoot":""}